<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0072)http://www.kerneltravel.net/kernel-book/第六章%20Linux内存管理/6.4.3.htm -->
<HTML xmlns="http://www.w3.org/TR/REC-html40" xmlns:o = 
"urn:schemas-microsoft-com:office:office" xmlns:w = 
"urn:schemas-microsoft-com:office:word" xmlns:st1 = 
"urn:schemas-microsoft-com:office:smarttags"><HEAD><TITLE>内存映射</TITLE>
<META http-equiv=Content-Type content="text/html; charset=gb2312">
<META content=Word.Document name=ProgId>
<META content="MSHTML 6.00.3790.4324" name=GENERATOR>
<META content="Microsoft Word 11" name=Originator><LINK 
href="6.4.3.files/filelist.xml" rel=File-List><o:SmartTagType downloadurl="" 
name="chsdate" 
namespaceuri="urn:schemas-microsoft-com:office:smarttags"></o:SmartTagType><o:SmartTagType 
downloadurl="" name="chmetcnv" 
namespaceuri="urn:schemas-microsoft-com:office:smarttags"></o:SmartTagType><!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>CLJ</o:Author>
  <o:Template>Normal</o:Template>
  <o:LastAuthor>CLJ</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>1</o:TotalTime>
  <o:Created>2007-08-15T08:06:00Z</o:Created>
  <o:LastSaved>2007-08-15T08:06:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>1664</o:Words>
  <o:Characters>9490</o:Characters>
  <o:Lines>79</o:Lines>
  <o:Paragraphs>22</o:Paragraphs>
  <o:CharactersWithSpaces>11132</o:CharactersWithSpaces>
  <o:Version>11.5606</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:GrammarState>Clean</w:GrammarState>
  <w:PunctuationKerning/>
  <w:DrawingGridVerticalSpacing>7.8 磅</w:DrawingGridVerticalSpacing>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>2</w:DisplayVerticalDrawingGridEvery>
  <w:ValidateAgainstSchemas/>
  <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>
  <w:IgnoreMixedContent>false</w:IgnoreMixedContent>
  <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>
  <w:Compatibility>
   <w:SpaceForUL/>
   <w:BalanceSingleByteDoubleByteWidth/>
   <w:DoNotLeaveBackslashAlone/>
   <w:ULTrailSpace/>
   <w:DoNotExpandShiftReturn/>
   <w:AdjustLineHeightInTable/>
   <w:BreakWrappedTables/>
   <w:SnapToGridInCell/>
   <w:WrapTextWithPunct/>
   <w:UseAsianBreakRules/>
   <w:DontGrowAutofit/>
   <w:UseFELayout/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:LatentStyles DefLockedState="false" LatentStyleCount="156">
 </w:LatentStyles>
</xml><![endif]--><!--[if !mso]>
<OBJECT id=ieooui classid=clsid:38481807-CA0E-42D2-BF39-B33AF135CC4D></OBJECT>
<STYLE>st1\:* {
	BEHAVIOR: url(#ieooui)
}
</STYLE>
<![endif]-->
<STYLE>@font-face {
	font-family: Wingdings;
}
@font-face {
	font-family: 宋体;
}
@font-face {
	font-family: @宋体;
}
@page  {mso-page-border-surround-header: no; mso-page-border-surround-footer: no; }
@page Section1 {size: 595.3pt 841.9pt; margin: 72.0pt 90.0pt 72.0pt 90.0pt; mso-header-margin: 42.55pt; mso-footer-margin: 49.6pt; mso-paper-source: 0; layout-grid: 15.6pt; }
P.MsoNormal {
	TEXT-JUSTIFY: inter-ideograph; FONT-SIZE: 10.5pt; MARGIN: 0cm 0cm 0pt; FONT-FAMILY: "Times New Roman"; TEXT-ALIGN: justify; mso-style-parent: ""; mso-pagination: none; mso-bidi-font-size: 10.0pt; mso-fareast-font-family: 宋体; mso-font-kerning: 1.0pt
}
LI.MsoNormal {
	TEXT-JUSTIFY: inter-ideograph; FONT-SIZE: 10.5pt; MARGIN: 0cm 0cm 0pt; FONT-FAMILY: "Times New Roman"; TEXT-ALIGN: justify; mso-style-parent: ""; mso-pagination: none; mso-bidi-font-size: 10.0pt; mso-fareast-font-family: 宋体; mso-font-kerning: 1.0pt
}
DIV.MsoNormal {
	TEXT-JUSTIFY: inter-ideograph; FONT-SIZE: 10.5pt; MARGIN: 0cm 0cm 0pt; FONT-FAMILY: "Times New Roman"; TEXT-ALIGN: justify; mso-style-parent: ""; mso-pagination: none; mso-bidi-font-size: 10.0pt; mso-fareast-font-family: 宋体; mso-font-kerning: 1.0pt
}
SPAN.GramE {
	mso-style-name: ""; mso-gram-e: yes
}
DIV.Section1 {
	page: Section1
}
OL {
	MARGIN-BOTTOM: 0cm
}
UL {
	MARGIN-BOTTOM: 0cm
}
</STYLE>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:普通表格;
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:"";
	mso-padding-alt:0cm 5.4pt 0cm 5.4pt;
	mso-para-margin:0cm;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";
	mso-ansi-language:#0400;
	mso-fareast-language:#0400;
	mso-bidi-language:#0400;}
</style>
<![endif]--></HEAD>
<BODY lang=ZH-CN style="TEXT-JUSTIFY-TRIM: punctuation; tab-interval: 21.0pt">
<DIV class=Section1 style="LAYOUT-GRID:  15.6pt none">
<P class=MsoNormal 
style="TEXT-ALIGN: left; mso-outline-level: 1; mso-layout-grid-align: none" 
align=left><st1:chsdate w:st="on" IsROCDate="False" IsLunarDate="False" Day="30" 
Month="12" Year="1899"><B style="mso-bidi-font-weight: normal"><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">6.4.3</SPAN></B></st1:chsdate><B 
style="mso-bidi-font-weight: normal"><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"> 
</SPAN></B><B style="mso-bidi-font-weight: normal"><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">内存映射<SPAN 
lang=EN-US><o:p></o:p></SPAN></SPAN></B></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><B style="mso-bidi-font-weight: normal"><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN></SPAN></B><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">当某个程序的<SPAN 
class=GramE>映象</SPAN>开始执行时，可执行<SPAN class=GramE>映象</SPAN>必须装入<SPAN 
class=GramE>到进程</SPAN>的虚拟地址空间。如果该进程用到了任何一个共享库，则共享库也必须装入<SPAN 
class=GramE>到进程</SPAN>的虚拟地址空间。由此可看出，<SPAN lang=EN-US>Linux</SPAN>并不将<SPAN 
class=GramE>映象</SPAN>装入到物理内存，相反，可执行文件只是被连接<SPAN 
class=GramE>到进程</SPAN>的虚拟地址空间中。随着程序的运行，被引用的程序部分会由操作系统装入到物理内存，这种将<SPAN 
class=GramE>映象</SPAN>链接到进程地址空间的方法被称为“内存映射”。<SPAN 
lang=EN-US><o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 24pt; TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">当可执行<SPAN 
class=GramE>映象</SPAN>映射<SPAN class=GramE>到进程</SPAN>的虚拟地址空间时，将产生一组<SPAN 
lang=EN-US> vm_area_struct </SPAN>结构来描述虚拟内存区间的起始点和终止点，每个<SPAN lang=EN-US> 
vm_area_struct </SPAN>结构代表可执行<SPAN 
class=GramE>映象</SPAN>的一部分，可能是可执行代码，也可能是初始化的变量或未初始化的数据，这些都是在函数<SPAN 
lang=EN-US>do_mmap()</SPAN>中来实现的。随着<SPAN lang=EN-US> vm_area_struct 
</SPAN>结构的生成，这些结构所描述的虚拟内存区间上的标准操作函数也由<SPAN lang=EN-US> Linux 
</SPAN>初始化。但要明确在这一步还没有建立从虚拟内存到物理内存的影射，也就是说还没有建立页表页目录。<SPAN 
lang=EN-US><o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 24pt; TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><o:p>&nbsp;</o:p></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 24pt; TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">为了对上面的原理进行具体的说明，我们来看一下<SPAN 
lang=EN-US>do_mmap()</SPAN>的实现机制。<SPAN lang=EN-US><o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 24pt; TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">函数<SPAN 
lang=EN-US>do_mmap()</SPAN>为当前进程创建并初始化一个新的虚拟区，如果分配成功，就把这个新的虚拟区与进程已有的其他虚拟区进行合并，<SPAN 
lang=EN-US>do_mmap()</SPAN>在<SPAN lang=EN-US>include/linux/mm.h 
</SPAN>中定义如下：<SPAN lang=EN-US><o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 24pt; TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><o:p>&nbsp;</o:p></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 24pt; TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN class=GramE><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">static</SPAN></SPAN><SPAN 
lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"> 
inline unsigned long do_mmap(struct file *file, unsigned long 
addr,<o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 24pt; TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>unsigned</SPAN> long len, unsigned long 
prot,<o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 24pt; TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>unsigned</SPAN> long flag, unsigned long 
offset)<o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 24pt; TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">{<o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 24pt; TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>unsigned</SPAN> long ret = 
-EINVAL;<o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 24pt; TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>if</SPAN> ((offset + PAGE_ALIGN(len)) &lt; 
offset)<o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 24pt; TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>goto</SPAN> out;<o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 24pt; TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>if</SPAN> (!(offset &amp; 
~PAGE_MASK))<o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 24pt; TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>ret</SPAN> = do_mmap_pgoff(file, addr, len, prot, flag, 
offset &gt;&gt; PAGE_SHIFT);<o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 24pt; TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN class=GramE><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">out</SPAN></SPAN><SPAN 
lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">:<o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 24pt; TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>return</SPAN> ret;<o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 24pt; TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">}<o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 24pt; TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><o:p>&nbsp;</o:p></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 24pt; TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">函数中参数的含义如下：<SPAN 
lang=EN-US><o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 24pt; TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">file</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">：表示要映射的文件，<SPAN 
lang=EN-US>file</SPAN>结构将在第八章文件系统中进行介绍；<SPAN 
lang=EN-US><o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal 
style="MARGIN-LEFT: 24pt; TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">off</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">：文件内的偏移量，因为我们并不是一下子全部映射一个文件，可能只是映射文件的一部分，<SPAN 
lang=EN-US>off</SPAN>就表示那部分的起始位置；<SPAN lang=EN-US><o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 24pt; TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">len</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">：要映射的文件部分的长度<SPAN 
lang=EN-US><o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 24pt; TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">addr</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">：虚拟空间中的一个地址，表示从这个地址开始查找一个空闲的虚拟区；<SPAN 
lang=EN-US><o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal style="MARGIN-LEFT: 24pt; mso-layout-grid-align: none"><SPAN 
lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">prot:</SPAN><SPAN 
lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'"> 
</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'">这个参数指定对这个虚拟区所包含页的存取权限。可能的标志有<SPAN 
lang=EN-US>PROT_READ</SPAN>、<SPAN lang=EN-US>PROT_WRITE</SPAN>、<SPAN 
lang=EN-US>PROT_EXEC</SPAN>和<SPAN lang=EN-US>PROT_NONE</SPAN>。前三个标志与标志<SPAN 
lang=EN-US>VM_READ</SPAN>、<SPAN lang=EN-US>VM_WRITE </SPAN>及<SPAN 
lang=EN-US>VM_EXEC</SPAN>的意义一样。<SPAN 
lang=EN-US>PROT_NONE</SPAN>表示进程没有以上三个存取权限中的任意一个。<SPAN 
lang=EN-US><o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal style="mso-layout-grid-align: none"><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>Flag</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'">：这个参数指定虚拟区的其它标志：<SPAN 
lang=EN-US><o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal style="TEXT-INDENT: 21pt; mso-layout-grid-align: none"><SPAN 
lang=EN-US style="COLOR: black"><o:p>&nbsp;</o:p></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 36pt; mso-outline-level: 1; mso-layout-grid-align: none"><SPAN 
lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'">MAP_GROWSDOWN</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'">，<SPAN 
lang=EN-US>MAP_LOCKED</SPAN>，<SPAN lang=EN-US>MAP_DENYWRITE</SPAN>和<SPAN 
lang=EN-US>MAP_EXECUTABLE </SPAN>：<SPAN lang=EN-US><o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal 
style="MARGIN-LEFT: 21pt; TEXT-INDENT: 21pt; mso-layout-grid-align: none"><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'">它们的含义与表<SPAN 
lang=EN-US>6.2</SPAN>中所列出标志的含义相同。<SPAN lang=EN-US><o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 36pt; mso-outline-level: 1; mso-layout-grid-align: none"><SPAN 
lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'">MAP_SHARED 
</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'">和<SPAN 
lang=EN-US> MAP_PRIVATE </SPAN>：<SPAN lang=EN-US><o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal style="MARGIN-LEFT: 42pt; mso-layout-grid-align: none"><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'">前一个标志指定虚拟区中的<SPAN 
class=GramE>页可以</SPAN>被许多进程共享；后一个标志作用相反。这两个标志都涉及<SPAN 
lang=EN-US>vm_area_struct</SPAN>中的<SPAN 
lang=EN-US>VM_SHARED</SPAN>标志。</SPAN><SPAN lang=EN-US 
style="COLOR: black"><o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 36pt; mso-outline-level: 1; mso-layout-grid-align: none"><SPAN 
lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'">MAP_ANONYMOUS<o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="MARGIN-LEFT: 21pt; TEXT-INDENT: 21pt; mso-layout-grid-align: none"><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'">表示这个虚拟区是匿名的，与任何文件无关。</SPAN><SPAN 
lang=EN-US style="COLOR: black"><o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 36pt; mso-outline-level: 1; mso-layout-grid-align: none"><SPAN 
lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'">MAP_FIXED 
<o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="MARGIN-LEFT: 21pt; TEXT-INDENT: 21pt; mso-layout-grid-align: none"><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'">这个区间的起始地址必须是由参数<SPAN 
lang=EN-US>addr</SPAN>所指定的。</SPAN><SPAN lang=EN-US 
style="COLOR: black"><o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 36pt; mso-outline-level: 1; mso-layout-grid-align: none"><SPAN 
lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'">MAP_NORESERVE 
<o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="MARGIN-LEFT: 21pt; TEXT-INDENT: 21pt; mso-layout-grid-align: none"><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'">函数不必预先检查空闲页面的数目。</SPAN><SPAN 
lang=EN-US style="COLOR: black"><o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 19.2pt; TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">do_mmap()</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">函数对参数<SPAN 
lang=EN-US>offset</SPAN>的合法性检查后，就调用<SPAN 
lang=EN-US>do_mmap_pgoff</SPAN>（）函数，该函数才是内存映射的主要函数，<SPAN 
lang=EN-US>do_mmap_pgoff</SPAN>（）的代码在<SPAN 
lang=EN-US>mm/mmap.c</SPAN>中，代码比较长，我们分段来介绍：<SPAN 
lang=EN-US><o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 19.2pt; TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><o:p>&nbsp;</o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN class=GramE><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">unsigned</SPAN></SPAN><SPAN 
lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"> 
long do_mmap_pgoff(struct file * file, unsigned long addr, unsigned long 
len,<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>unsigned</SPAN> long prot, unsigned long flags, 
unsigned long pgoff)<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">{<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>struct</SPAN> mm_struct * mm = 
current-&gt;mm;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>struct</SPAN> vm_area_struct * vma, * 
prev;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>unsigned</SPAN> int vm_flags;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>int</SPAN> correct_wcount = 0;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>int</SPAN> error;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>rb_node_t ** rb_link, * rb_parent;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN><o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>if</SPAN> (file &amp;&amp; (!file-&gt;f_op || 
!file-&gt;f_op-&gt;mmap))<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>return</SPAN> -ENODEV;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>if</SPAN> ((len = PAGE_ALIGN(len)) == 
0)<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>return</SPAN> addr;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><o:p>&nbsp;</o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN style="mso-spacerun: yes">&nbsp;</SPAN><SPAN class=GramE>if</SPAN> 
(len &gt; TASK_SIZE)<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>return</SPAN> -EINVAL;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><o:p>&nbsp;</o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>/* 
offset overflow? */<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>if</SPAN> ((pgoff + (len &gt;&gt; PAGE_SHIFT)) &lt; 
pgoff)<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>return</SPAN> -EINVAL;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><o:p>&nbsp;</o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>/* 
<SPAN class=GramE>Too</SPAN> many mappings? */<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>if</SPAN> (mm-&gt;map_count &gt; 
MAX_MAP_COUNT)<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
class=GramE>return</SPAN> -ENOMEM;<o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="MARGIN-LEFT: 5.4pt; TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">函数首先检查参数的值是否正确，所提的请求是否能够被满足，如果发生以上情况中的任何一种，<SPAN 
lang=EN-US>do_mmap()</SPAN>函数都终止并返回一个负值。<SPAN 
lang=EN-US><o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US style="COLOR: black"><o:p>&nbsp;</o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp; </SPAN>/* <SPAN class=GramE>Obtain</SPAN> the 
address to map to. <SPAN class=GramE>we</SPAN> verify (or select) it and 
ensure<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>* <SPAN 
class=GramE>that</SPAN> it represents a valid section of the address 
space.<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>*/<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>addr</SPAN> = get_unmapped_area(file, addr, len, pgoff, 
flags);<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>if</SPAN> (addr &amp; ~PAGE_MASK)<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>return</SPAN> addr;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">调用<SPAN 
lang=EN-US>get_unmapped_area</SPAN>（）函数在当前进程的用户空间中获得一个未映射区间的起始地址。<SPAN 
lang=EN-US>PAGE_MASK</SPAN>的值为<SPAN lang=EN-US>0xFFFFF000</SPAN>，因此，如果“<SPAN 
lang=EN-US>addr &amp; ~PAGE_MASK</SPAN>”为非<SPAN lang=EN-US>0</SPAN>，说明<SPAN 
lang=EN-US>addr</SPAN>最低<SPAN lang=EN-US>12</SPAN>位非<SPAN 
lang=EN-US>0</SPAN>，<SPAN lang=EN-US>addr</SPAN>就不是一个有效的地址，就以这个地址作为返回值；否则，<SPAN 
lang=EN-US>addr</SPAN>就是一个有效的地址（最低<SPAN lang=EN-US>12</SPAN>位为<SPAN 
lang=EN-US>0</SPAN>），继续向下看：<SPAN lang=EN-US><o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><o:p>&nbsp;</o:p></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 36pt; TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">/* 
Do simple checking here so the lower-level routines won't 
have<o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 36pt; TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">* 
<SPAN class=GramE>to</SPAN>. <SPAN class=GramE>we</SPAN> assume access 
permissions have been handled by the open<o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 36pt; TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">* 
<SPAN class=GramE>of</SPAN> the memory object, so we don't do any 
here.<o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 36pt; TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">*/<o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="MARGIN-LEFT: 36pt; TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">vm_flags 
= calc_vm_<SPAN class=GramE>flags(</SPAN>prot,flags) | mm-&gt;def_flags | 
VM_MAYREAD | VM_MAYWRITE | VM_MAYEXEC;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><o:p>&nbsp;</o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>/* mlock MCL_FUTURE? 
*/<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>if</SPAN> (vm_flags &amp; VM_LOCKED) 
{<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>unsigned</SPAN> long locked = mm-&gt;locked_vm &lt;&lt; 
PAGE_SHIFT;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>locked</SPAN> += len;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>if</SPAN> (locked &gt; 
current-&gt;rlim[RLIMIT_MEMLOCK].rlim_cur)<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>return</SPAN> -EAGAIN;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>}<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">如果</SPAN><SPAN 
lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings">flag</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings">参数指定的新虚拟区中的<SPAN 
class=GramE>页必须</SPAN>锁在内存，<SPAN class=GramE>且进程</SPAN>加锁页的总数超过了保存在进程的<SPAN 
lang=EN-US>task_struct</SPAN>结构<SPAN 
lang=EN-US>rlim[RLIMIT_MEMLOCK].rlim_cur</SPAN>域中的上限值，则返回一个负值，继续：<SPAN 
lang=EN-US><o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><o:p>&nbsp;</o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN><SPAN class=GramE>if</SPAN> (file) 
{<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>switch</SPAN> (flags &amp; MAP_TYPE) 
{<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>case</SPAN> MAP_SHARED:<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp; </SPAN><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
class=GramE>if</SPAN> ((prot &amp; PROT_WRITE) &amp;&amp; !(file-&gt;f_mode 
&amp; FMODE_WRITE))<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>return</SPAN> -EACCES;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><o:p>&nbsp;</o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>/* Make sure we don't allow writing to an append-only file<SPAN 
class=GramE>..</SPAN> */<o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="MARGIN-LEFT: 144pt; TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN class=GramE><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings">if</SPAN></SPAN><SPAN 
lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"> 
(IS_APPEND(file-&gt;f_dentry-&gt;d_inode) &amp;&amp; (file-&gt;f_mode &amp; 
<SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;</SPAN>FMODE_WRITE))<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>return</SPAN> -EACCES;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><o:p>&nbsp;</o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>/* make sure there are no mandatory locks on the file. 
*/<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>if</SPAN> 
(locks_verify_locked(file-&gt;f_dentry-&gt;d_inode))<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
class=GramE>return</SPAN> -EAGAIN;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><o:p>&nbsp;</o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>vm_flags |= VM_SHARED | VM_MAYSHARE;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>if</SPAN> (!(file-&gt;f_mode &amp; 
FMODE_WRITE))<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>vm_flags &amp;= <SPAN class=GramE>~(</SPAN>VM_MAYWRITE | 
VM_SHARED);<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><o:p>&nbsp;</o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>/* fall through */<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>case</SPAN> MAP_PRIVATE:<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>if</SPAN> (!(file-&gt;f_mode &amp; 
FMODE_READ))<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>return</SPAN> -EACCES;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>break</SPAN>;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><o:p>&nbsp;</o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>default</SPAN>:<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>return</SPAN> -EINVAL;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;</SPAN><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>}<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>} 
else {<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>vm_flags |= VM_SHARED | VM_MAYSHARE;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>switch</SPAN> (flags &amp; MAP_TYPE) 
{<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>default</SPAN>:<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>return</SPAN> -EINVAL;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>case</SPAN> MAP_PRIVATE:<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>vm_flags &amp;= <SPAN class=GramE>~(</SPAN>VM_SHARED | 
VM_MAYSHARE);<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>/* fall through */<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>case</SPAN> MAP_SHARED:<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>break</SPAN>;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>}<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>}<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings">如果<SPAN 
lang=EN-US>file</SPAN>结构指针为<SPAN 
lang=EN-US>0</SPAN>，则目的仅在于创建虚拟区间，或者说，并没有真正的映射发生；如果<SPAN 
lang=EN-US>file</SPAN>结构指针不为<SPAN 
lang=EN-US>0</SPAN>，则目的在于建立从文件到虚拟区间的映射，那就要根据标志指定的映射种类，把为文件设置的访问权考虑进去：<SPAN 
lang=EN-US><o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal 
style="MARGIN-LEFT: 21.25pt; TEXT-INDENT: -21.25pt; TEXT-ALIGN: left; mso-layout-grid-align: none; mso-list: l3 level1 lfo1; tab-stops: list 21.25pt" 
align=left><![if !supportLists]><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings; mso-bidi-font-family: 宋体"><SPAN 
style="mso-list: Ignore">・<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN></SPAN><![endif]><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings">如果所请求的内存映射是共享可写的，就要检查要映射的文件是为写入而打开的，而不是以追加模式打开的，还要检查文件上没有强制锁。<SPAN 
lang=EN-US><o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal 
style="MARGIN-LEFT: 21.25pt; TEXT-INDENT: -21.25pt; TEXT-ALIGN: left; mso-layout-grid-align: none; mso-list: l3 level1 lfo1; tab-stops: list 21.25pt" 
align=left><![if !supportLists]><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings; mso-bidi-font-family: 宋体"><SPAN 
style="mso-list: Ignore">・<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN></SPAN><![endif]><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings">对于任何种类的内存映射，都要检查文件是为读操作而打开的。<SPAN 
lang=EN-US><o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;</SPAN></SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings">如果以上条件都不满足，就返回一个错误码。<SPAN 
lang=EN-US><o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><o:p>&nbsp;</o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings">/* Clear 
old maps */<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>error</SPAN> = -ENOMEM;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings">munmap_back:<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>vma</SPAN> = find_vma_prepare(mm, addr, &amp;prev, 
&amp;rb_link, &amp;rb_parent);<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>if</SPAN> (vma &amp;&amp; vma-&gt;vm_start &lt; addr + 
len) {<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>if</SPAN> (do_munmap(mm, addr, 
len))<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>return</SPAN> -ENOMEM;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>goto</SPAN> munmap_back;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>}<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings">函数<SPAN 
lang=EN-US>find_vma_prepare</SPAN>（）与<SPAN 
lang=EN-US>find_vma</SPAN>（）基本相同，它扫描当前进程地址空间的<SPAN 
lang=EN-US>vm_area_struct</SPAN>结构所形成的红黑树，试图找到结束地址高于<SPAN 
lang=EN-US>addr</SPAN>的第一个区间；如果找到了一个虚拟区，说明<SPAN 
lang=EN-US>addr</SPAN>所在的虚拟区已经在使用，也就是已经有映射存在，因此要调用<SPAN 
lang=EN-US>do_munmap</SPAN>（）把这个老的虚拟区<SPAN 
class=GramE>从进程</SPAN>地址空间中撤销，如果撤销不成功，就返回一个负数；如果撤销成功，就继续查找，直到在红黑树中找不到<SPAN 
lang=EN-US>addr</SPAN>所在的虚拟区，并继续下面的检查；<SPAN 
lang=EN-US><o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><o:p>&nbsp;</o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>/* Check against 
address space limit. */<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>if</SPAN> ((mm-&gt;total_vm &lt;&lt; PAGE_SHIFT) + 
len<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>&gt; current-&gt;<SPAN 
class=GramE>rlim[</SPAN>RLIMIT_AS].rlim_cur)<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>return</SPAN> -ENOMEM;<o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 19.2pt; TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings">total_vm</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings">是表示进程地址空间的页面数，如果把文件映射<SPAN 
class=GramE>到进程</SPAN>地址空间后，其长度超过了保存在当前进程<SPAN 
lang=EN-US>rlim[RLIMIT_AS].rlim_cur</SPAN>中的上限值，则返回一个负数。<SPAN 
lang=EN-US><o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>/* Private writable mapping? Check 
memory availability<SPAN class=GramE>..</SPAN> */<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>if</SPAN> ((vm_flags &amp; (VM_SHARED | VM_WRITE)) == 
VM_WRITE &amp;&amp;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>!(</SPAN>flags &amp; MAP_NORESERVE) 
&amp;&amp;!vm_enough_memory(len &gt;&gt; PAGE_SHIFT))<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>return</SPAN> -ENOMEM;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings">如果<SPAN 
lang=EN-US>flags</SPAN>参数中没有设置<SPAN 
lang=EN-US>MAP_NORESERVE</SPAN>标志，新的虚拟区含有私有的可写页，空闲页面数小于要映射的虚拟区的大小；则函数终止并返回一个负数；其中函数<SPAN 
lang=EN-US>vm_enough_memory</SPAN>（）用来检查一个进程的地址空间中是否有足够的内存来进行一个新的映射。<SPAN 
lang=EN-US><o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;</SPAN><o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp; </SPAN><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN>/* 
Can we just expand an old anonymous mapping? */<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>if</SPAN> (!file &amp;&amp; !(vm_flags &amp; VM_SHARED) 
&amp;&amp; rb_parent)<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>if</SPAN> (vma_merge(mm, prev, rb_parent, addr, addr + 
len, vm_flags))<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>goto</SPAN> out;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings">如果是匿名映射（<SPAN 
lang=EN-US>file</SPAN>为空），并且这个虚拟区是非共享的，则可以把这个虚拟区和与它紧挨的前一个虚拟区进行合并；虚拟区的合并是由<SPAN 
lang=EN-US>vma_merge()</SPAN>函数实现的。如果合并成功，则转<SPAN 
lang=EN-US>out</SPAN>处，请看后面<SPAN lang=EN-US>out</SPAN>处的代码。<SPAN 
lang=EN-US><o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><o:p>&nbsp;</o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>/* <SPAN 
class=GramE>Determine</SPAN> the object being mapped and call the 
appropriate<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>* <SPAN class=GramE>specific</SPAN> mapper. <SPAN class=GramE>the</SPAN> 
address has already been validated, but<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN style="mso-spacerun: yes">&nbsp;</SPAN>* <SPAN 
class=GramE>not</SPAN> unmapped, but the maps are removed from the 
list.<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>*/<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>vma</SPAN> = kmem_cache_alloc(vm_area_cachep, 
SLAB_KERNEL);<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>if</SPAN> (!vma)<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;</SPAN><SPAN 
class=GramE>return</SPAN> -ENOMEM;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>vma</SPAN>-&gt;vm_mm = mm;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>vma</SPAN>-&gt;vm_start = addr;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;</SPAN><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>vma</SPAN>-&gt;vm_end = addr + 
len;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN lang=PT-BR 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings; mso-ansi-language: PT-BR">vma-&gt;vm_flags 
= vm_flags;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=PT-BR 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings; mso-ansi-language: PT-BR"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN class=GramE><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings">vma</SPAN></SPAN><SPAN 
lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings">-&gt;vm_page_prot 
= protection_map[vm_flags &amp; 0x<st1:chmetcnv w:st="on" TCSC="0" 
NumberType="1" Negative="False" HasSpace="False" SourceValue="0" 
UnitName="F">0f</st1:chmetcnv>];<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>vma</SPAN>-&gt;vm_ops = NULL;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>vma</SPAN>-&gt;vm_pgoff = pgoff;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN lang=PT-BR 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings; mso-ansi-language: PT-BR">vma-&gt;vm_file 
= NULL;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=PT-BR 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings; mso-ansi-language: PT-BR"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>vma-&gt;vm_private_data = NULL;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=PT-BR 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings; mso-ansi-language: PT-BR"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>vma-&gt;vm_raend = 0;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=PT-BR 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings; mso-ansi-language: PT-BR"><o:p>&nbsp;</o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=PT-BR 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings; mso-ansi-language: PT-BR"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings">经过以上各种检查后</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings; mso-ansi-language: PT-BR">，</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings">现在必须为新的虚拟区分配一个</SPAN><SPAN 
lang=PT-BR 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings; mso-ansi-language: PT-BR">vm_area_struct</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings">结构。这是通过调用<SPAN 
lang=EN-US>Slab</SPAN>分配函数<SPAN 
lang=EN-US>kmem_cache_alloc</SPAN>（）来实现的，然后就对这个结构的各个域进行了初始化。<SPAN 
lang=EN-US><o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings"><o:p>&nbsp;</o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US style="COLOR: black"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
class=GramE>if</SPAN> (file) {<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US style="COLOR: black"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>error</SPAN> = -EINVAL;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US style="COLOR: black"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>if</SPAN> (vm_flags &amp; 
(VM_GROWSDOWN|VM_GROWSUP))<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US style="COLOR: black"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>goto</SPAN> free_vma;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US style="COLOR: black"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>if</SPAN> (vm_flags &amp; VM_DENYWRITE) 
{<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US style="COLOR: black"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>error</SPAN> = 
deny_write_access(file);<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US style="COLOR: black"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>if</SPAN> (error)<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US style="COLOR: black"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
class=GramE>goto</SPAN> free_vma;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US style="COLOR: black"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>correct_wcount = 1;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US style="COLOR: black"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>}<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US style="COLOR: black"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>vma</SPAN>-&gt;vm_file = file;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US style="COLOR: black"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>get_<SPAN class=GramE>file(</SPAN>file);<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US style="COLOR: black"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>error</SPAN> = file-&gt;f_op-&gt;mmap(file, 
vma);<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US style="COLOR: black"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>if</SPAN> (error)<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US style="COLOR: black"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
class=GramE>goto</SPAN> unmap_and_free_vma;<o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="TEXT-ALIGN: left; mso-outline-level: 1; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US style="COLOR: black"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>} 
else if (flags &amp; MAP_SHARED) {<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US style="COLOR: black"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN lang=PT-BR 
style="COLOR: black; mso-ansi-language: PT-BR">error = 
shmem_zero_setup(vma);<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=PT-BR style="COLOR: black; mso-ansi-language: PT-BR"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN class=GramE><SPAN lang=EN-US 
style="COLOR: black">if</SPAN></SPAN><SPAN lang=EN-US style="COLOR: black"> 
(error)<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US style="COLOR: black"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>goto</SPAN> free_vma;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US style="COLOR: black"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>}<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US style="COLOR: black">free_vma:<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US style="COLOR: black"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>kmem_cache_<SPAN class=GramE>free(</SPAN>vm_area_cachep, 
vma);<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US style="COLOR: black"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>return</SPAN> error;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US style="COLOR: black">}<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US style="COLOR: black"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">如果建立的是从文件到虚存区间的映射，则：</SPAN><SPAN 
lang=EN-US style="COLOR: black"><o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="MARGIN-LEFT: 21.25pt; TEXT-INDENT: -21.25pt; TEXT-ALIGN: left; mso-layout-grid-align: none; mso-list: l2 level1 lfo2; tab-stops: list 21.25pt" 
align=left><![if !supportLists]><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings; mso-bidi-font-family: 宋体"><SPAN 
style="mso-list: Ignore">・<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN></SPAN><![endif]><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">当参数</SPAN><SPAN 
lang=EN-US style="COLOR: black">flags</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">中的</SPAN><SPAN 
lang=EN-US style="COLOR: black">VM_GROWSDOWN</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">或</SPAN><SPAN 
lang=EN-US style="COLOR: black">VM_GROWSUP</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">标志位为</SPAN><SPAN 
lang=EN-US style="COLOR: black">1</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">时，说明这个区间可以向低地址或高地址扩展，但从文件映射的区间不能进行扩展，因此转到</SPAN><SPAN 
lang=EN-US style="COLOR: black">free_vma</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">，释放给</SPAN><SPAN 
lang=EN-US style="COLOR: black">vm_area_struct</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">分配的</SPAN><SPAN 
lang=EN-US style="COLOR: black">Slab</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">，并返回一个错误；</SPAN><SPAN 
lang=EN-US style="COLOR: black"><o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="MARGIN-LEFT: 21.25pt; TEXT-INDENT: -21.25pt; TEXT-ALIGN: left; mso-layout-grid-align: none; mso-list: l2 level1 lfo2; tab-stops: list 21.25pt" 
align=left><![if !supportLists]><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings; mso-bidi-font-family: 宋体"><SPAN 
style="mso-list: Ignore">・<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN></SPAN><![endif]><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">当</SPAN><SPAN 
lang=EN-US style="COLOR: black">flags</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">中的</SPAN><SPAN 
lang=EN-US style="COLOR: black">VM_DENYWRITE</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">标志位为</SPAN><SPAN 
lang=EN-US style="COLOR: black">1</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">时，就表示不允许通过常规的文件操作访问该文件，所以要调用</SPAN><SPAN 
lang=EN-US style="COLOR: black">deny_write_access</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">（）排斥常规的文件操作（参见第八章）。</SPAN><SPAN 
lang=EN-US style="COLOR: black"><o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="MARGIN-LEFT: 21.25pt; TEXT-INDENT: -21.25pt; TEXT-ALIGN: left; mso-layout-grid-align: none; mso-list: l2 level1 lfo2; tab-stops: list 21.25pt" 
align=left><![if !supportLists]><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings; mso-bidi-font-family: 宋体"><SPAN 
style="mso-list: Ignore">・<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN></SPAN><![endif]><SPAN lang=EN-US 
style="COLOR: black">get_file</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">（）函数的主要作用是递增</SPAN><SPAN 
lang=EN-US style="COLOR: black">file</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">结构中的共享计数；</SPAN><SPAN 
lang=EN-US style="COLOR: black"><o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="MARGIN-LEFT: 21.25pt; TEXT-INDENT: -21.25pt; mso-list: l0 level1 lfo3; tab-stops: list 21.25pt"><![if !supportLists]><SPAN 
lang=EN-US 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings; mso-bidi-font-family: 宋体"><SPAN 
style="mso-list: Ignore">・<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN></SPAN><![endif]><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">每个文件系统都有个</SPAN><SPAN 
lang=EN-US style="COLOR: black">fiel_operation</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">数据结构，其中的函数指针</SPAN><SPAN 
lang=EN-US style="COLOR: black">mmap</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">提供了用来建立从该类文件到虚存区间进行映射的操作，这是最具有实质意义的函数；对于大部分文件系统，这个函数为</SPAN><SPAN 
lang=EN-US>generic_file_mmap( )</SPAN><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">函数实现的，该函数执行以下操作：</SPAN></P>
<P class=MsoNormal 
style="MARGIN-LEFT: 60.25pt; TEXT-INDENT: -18pt; mso-list: l5 level1 lfo6; tab-stops: list 60.25pt"><![if !supportLists]><SPAN 
lang=EN-US style="mso-fareast-font-family: 'Times New Roman'"><SPAN 
style="mso-list: Ignore">(1)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; 
</SPAN></SPAN></SPAN><![endif]><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">初始化</SPAN><SPAN 
lang=EN-US>vm_area_struct</SPAN><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">结构中的</SPAN><SPAN 
lang=EN-US>vm_ops</SPAN><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">域。如果</SPAN><SPAN 
lang=EN-US>VM_SHARED</SPAN><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">标志为</SPAN><SPAN 
lang=EN-US>1</SPAN><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">，就把该域设置成</SPAN><SPAN 
lang=EN-US>file_shared_mmap</SPAN><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">，否则就把该域设置成</SPAN><SPAN 
lang=EN-US>file_private_mmap</SPAN><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">。从某种意义上说，这个步骤所做的事情类似于打开一个文件并初始化文件对象的方法。</SPAN></P>
<P class=MsoNormal 
style="MARGIN-LEFT: 60.25pt; TEXT-INDENT: -18pt; mso-list: l5 level1 lfo6; tab-stops: list 60.25pt"><![if !supportLists]><SPAN 
lang=EN-US style="mso-fareast-font-family: 'Times New Roman'"><SPAN 
style="mso-list: Ignore">(2)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; 
</SPAN></SPAN></SPAN><![endif]><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">从索引节点的</SPAN><SPAN 
lang=EN-US>i_mode</SPAN><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">域（参见第八章）检查要映射的文件是否是一个常规文件。如果是其他类型的文件（例如目录或套接字），就返回一个错误代码。</SPAN></P>
<P class=MsoNormal 
style="MARGIN-LEFT: 60.25pt; TEXT-INDENT: -18pt; mso-list: l5 level1 lfo6; tab-stops: list 60.25pt"><![if !supportLists]><SPAN 
lang=EN-US style="mso-fareast-font-family: 'Times New Roman'"><SPAN 
style="mso-list: Ignore">(3)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; 
</SPAN></SPAN></SPAN><![endif]><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">从索引节点的</SPAN><SPAN 
lang=EN-US>i_op</SPAN><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">域中检查是否定义了</SPAN><SPAN 
lang=EN-US>readpage( )</SPAN><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">的索引节点操作。如果没有定义，就返回一个错误代码。</SPAN></P>
<P class=MsoNormal 
style="MARGIN-LEFT: 60.25pt; TEXT-INDENT: -18pt; mso-list: l5 level1 lfo6; tab-stops: list 60.25pt"><![if !supportLists]><SPAN 
lang=EN-US style="mso-fareast-font-family: 'Times New Roman'"><SPAN 
style="mso-list: Ignore">(4)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; 
</SPAN></SPAN></SPAN><![endif]><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">调用</SPAN><SPAN 
lang=EN-US>update_atime( )</SPAN><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">函数把当前时间存放在该文件索引节点的</SPAN><SPAN 
lang=EN-US>i_atime</SPAN><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">域中，并将这个索引节点标记成脏。</SPAN></P>
<P class=MsoNormal 
style="MARGIN-LEFT: 21.25pt; TEXT-INDENT: -21.25pt; mso-list: l1 level1 lfo4; tab-stops: list 21.25pt"><![if !supportLists]><SPAN 
lang=EN-US 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings; mso-bidi-font-family: 宋体"><SPAN 
style="mso-list: Ignore">・<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN></SPAN><![endif]><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">如果</SPAN><SPAN 
lang=EN-US>flags</SPAN><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">参数中的</SPAN><SPAN 
lang=EN-US style="COLOR: black">MAP_SHARED</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">标志位为</SPAN><SPAN 
lang=EN-US style="COLOR: black">1</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">，则调用</SPAN><SPAN 
lang=EN-US style="COLOR: black">shmem_zero_setup</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">（）进行共享内存的映射。</SPAN></P>
<P class=MsoNormal><SPAN lang=EN-US style="COLOR: black"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">继续看</SPAN><SPAN 
lang=EN-US style="COLOR: black">do_mmap()</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">中的代码；</SPAN></P>
<P class=MsoNormal><SPAN lang=EN-US><o:p>&nbsp;</o:p></SPAN></P>
<P class=MsoNormal><SPAN lang=EN-US><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>/* Can addr have changed??</SPAN></P>
<P class=MsoNormal><SPAN lang=EN-US><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>*</SPAN></P>
<P class=MsoNormal><SPAN lang=EN-US><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>* Answer: Yes, several device drivers can do it in their</SPAN></P>
<P class=MsoNormal><SPAN lang=EN-US><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>*<SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>f_op-&gt;mmap method.</SPAN> -DaveM</SPAN></P>
<P class=MsoNormal><SPAN lang=EN-US><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>*/</SPAN></P>
<P class=MsoNormal><SPAN lang=EN-US><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>addr</SPAN> = vma-&gt;vm_start;</SPAN></P>
<P class=MsoNormal><SPAN lang=EN-US><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">源码作者给出了解释，意思是说，</SPAN><SPAN 
lang=EN-US>addr</SPAN><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">有可能已被驱动程序改变，因此，把新虚拟区的起始地址赋给</SPAN><SPAN 
lang=EN-US>addr</SPAN><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">；</SPAN></P>
<P class=MsoNormal><SPAN lang=EN-US><o:p>&nbsp;</o:p></SPAN></P>
<P class=MsoNormal><SPAN lang=EN-US><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>vma_<SPAN class=GramE>link(</SPAN>mm, vma, prev, rb_link, 
rb_parent);</SPAN></P>
<P class=MsoNormal><SPAN lang=EN-US><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>if</SPAN> (correct_wcount)</SPAN></P>
<P class=MsoNormal><SPAN lang=EN-US><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>atomic_<SPAN 
class=GramE>inc(</SPAN>&amp;file-&gt;f_dentry-&gt;d_inode-&gt;i_writecount);</SPAN></P>
<P class=MsoNormal><SPAN lang=EN-US><SPAN 
style="mso-spacerun: yes">&nbsp;</SPAN><SPAN style="mso-spacerun: yes">&nbsp; 
</SPAN></SPAN><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">此时，应该把新建的虚拟区插入<SPAN 
class=GramE>到进程</SPAN>的地址空间，这是由函数</SPAN><SPAN lang=EN-US>vma_link</SPAN><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">（）完成的，该函数具有三方面的功能：</SPAN></P>
<P class=MsoNormal 
style="MARGIN-LEFT: 33.6pt; TEXT-INDENT: -24pt; mso-list: l4 level1 lfo5; tab-stops: list 33.6pt"><![if !supportLists]><SPAN 
lang=EN-US style="mso-bidi-font-family: 宋体"><SPAN 
style="mso-list: Ignore">（1）<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; 
</SPAN></SPAN></SPAN><![endif]><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">把</SPAN><SPAN 
lang=EN-US>vma </SPAN><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">插入到虚拟区链表中</SPAN></P>
<P class=MsoNormal 
style="MARGIN-LEFT: 33.6pt; TEXT-INDENT: -24pt; mso-list: l4 level1 lfo5; tab-stops: list 33.6pt"><![if !supportLists]><SPAN 
lang=EN-US style="mso-bidi-font-family: 宋体"><SPAN 
style="mso-list: Ignore">（2）<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; 
</SPAN></SPAN></SPAN><![endif]><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">把</SPAN><SPAN 
lang=EN-US>vma</SPAN><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">插入到虚拟区形成的红黑树中</SPAN></P>
<P class=MsoNormal 
style="MARGIN-LEFT: 33.6pt; TEXT-INDENT: -24pt; mso-list: l4 level1 lfo5; tab-stops: list 33.6pt"><![if !supportLists]><SPAN 
lang=EN-US style="mso-bidi-font-family: 宋体"><SPAN 
style="mso-list: Ignore">（3）<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; 
</SPAN></SPAN></SPAN><![endif]><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">把</SPAN><SPAN 
lang=EN-US>vam</SPAN><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">插入到索引节点（</SPAN><SPAN 
lang=EN-US>inode</SPAN><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">）共享链表中</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US style="COLOR: black"><SPAN 
style="mso-spacerun: yes">&nbsp; </SPAN><SPAN 
style="mso-spacerun: yes">&nbsp;</SPAN></SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">函数</SPAN><SPAN 
lang=EN-US>atomic_inc</SPAN><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">（</SPAN><SPAN 
lang=EN-US>x</SPAN><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">）给</SPAN><SPAN 
lang=EN-US>*x</SPAN><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">加</SPAN><SPAN 
lang=EN-US>1</SPAN><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">，这是一个原子操作。在内核代码中，有很多地方调用了以</SPAN><SPAN 
lang=EN-US>atomic</SPAN><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">为前缀的函数。所谓原子操作，就是在操作过程中不会被中断。</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US><o:p>&nbsp;</o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN class=GramE><SPAN lang=EN-US>out</SPAN></SPAN><SPAN 
lang=EN-US>:<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>mm</SPAN>-&gt;total_vm += len &gt;&gt; 
PAGE_SHIFT;</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>if</SPAN> (vm_flags &amp; VM_LOCKED) {</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>mm</SPAN>-&gt;locked_vm += len &gt;&gt; 
PAGE_SHIFT;</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>make_pages_<SPAN class=GramE>present(</SPAN>addr, addr + len);</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>}</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>return</SPAN> addr;</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; 
</SPAN>do_mmap()</SPAN><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">函数准备从这里退出，首先增加进程地址空间的长度，然后看一下对这个区间是否加锁，如果加锁，说明准备访问这个区间，就要调用</SPAN><SPAN 
lang=EN-US>make_pages_present</SPAN><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">（）函数，建立虚拟页面到物理页面的映射，也就是完成文件到物理内存的真正调入。返回一个正数，说明这次映射成功。</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US 
style="COLOR: black">unmap_and_free_vma:<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US style="COLOR: black"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>if</SPAN> (correct_wcount)<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US style="COLOR: black"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>atomic_<SPAN 
class=GramE>inc(</SPAN>&amp;file-&gt;f_dentry-&gt;d_inode-&gt;i_writecount);<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US style="COLOR: black"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>vma</SPAN>-&gt;vm_file = NULL;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US style="COLOR: black"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN class=GramE>fput(</SPAN>file);<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US style="COLOR: black"><o:p>&nbsp;</o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US style="COLOR: black"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>/* 
Undo any partial mapping done by a device driver. */<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US style="COLOR: black"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>zap_page_<SPAN class=GramE>range(</SPAN>mm, vma-&gt;vm_start, 
vma-&gt;vm_end - vma-&gt;vm_start);<o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 19.2pt; TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">如果对文件的操作不成功，则解除对该虚拟区间的页面映射，这是由</SPAN><SPAN 
lang=EN-US style="COLOR: black">zap_page_range</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">（）函数完成的。</SPAN><SPAN 
lang=EN-US style="COLOR: black"><o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US style="COLOR: black"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">当你读到这里时可能感到困惑，页面的映射到底在何时建立？实际上，</SPAN><SPAN 
lang=EN-US>generic_file_mmap( )</SPAN><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">就是真正进行映射的函数。因为这个函数的实现涉及很多文件系统的内容，我们在此不进行深入的分析，当读者了解了文件系统的有关内容后，可自己进行分析。</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; mso-layout-grid-align: none" 
align=left><SPAN lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">这里要说明的是，文件到虚存的映射仅仅是建立了一种映射关系，也就是说，虚存页面到物理页面之间的映射还没有建立。当</SPAN><SPAN 
class=GramE><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">某个可</SPAN></SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">执行<SPAN 
class=GramE>映象</SPAN>映射<SPAN 
class=GramE>到进程</SPAN>虚拟内存中并开始执行时，因为只有很少一部分虚拟内存区间装入到了物理内存，可能会遇到所访问的数据不在物理内存。这时，处理器将向<SPAN 
lang=EN-US> Linux </SPAN>报告一个页故障及其对应的故障原因，于是就用到<SPAN 
class=GramE>了请页机制</SPAN>。<SPAN lang=EN-US><o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal><SPAN 
lang=EN-US><o:p>&nbsp;</o:p></SPAN></P></DIV></BODY></HTML>
