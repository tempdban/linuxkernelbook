<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:st1="urn:schemas-microsoft-com:office:smarttags"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=gb2312">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 11">
<meta name=Originator content="Microsoft Word 11">
<link rel=File-List href="6.8.1.files/filelist.xml">
<link rel=Edit-Time-Data href="6.8.1.files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>进程的创建</title>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="chsdate" downloadurl=""/>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>CLJ</o:Author>
  <o:Template>Normal</o:Template>
  <o:LastAuthor>MC SYSTEM</o:LastAuthor>
  <o:Revision>3</o:Revision>
  <o:TotalTime>0</o:TotalTime>
  <o:Created>2007-08-15T08:23:00Z</o:Created>
  <o:LastSaved>2008-10-05T04:34:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>1785</o:Words>
  <o:Characters>10181</o:Characters>
  <o:Lines>84</o:Lines>
  <o:Paragraphs>23</o:Paragraphs>
  <o:CharactersWithSpaces>11943</o:CharactersWithSpaces>
  <o:Version>11.5606</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:Zoom>90</w:Zoom>
  <w:PunctuationKerning/>
  <w:DrawingGridVerticalSpacing>7.8 磅</w:DrawingGridVerticalSpacing>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>2</w:DisplayVerticalDrawingGridEvery>
  <w:ValidateAgainstSchemas/>
  <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>
  <w:IgnoreMixedContent>false</w:IgnoreMixedContent>
  <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>
  <w:Compatibility>
   <w:SpaceForUL/>
   <w:BalanceSingleByteDoubleByteWidth/>
   <w:DoNotLeaveBackslashAlone/>
   <w:ULTrailSpace/>
   <w:DoNotExpandShiftReturn/>
   <w:AdjustLineHeightInTable/>
   <w:BreakWrappedTables/>
   <w:SnapToGridInCell/>
   <w:WrapTextWithPunct/>
   <w:UseAsianBreakRules/>
   <w:DontGrowAutofit/>
   <w:UseFELayout/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:LatentStyles DefLockedState="false" LatentStyleCount="156">
 </w:LatentStyles>
</xml><![endif]--><!--[if !mso]><object
 classid="clsid:38481807-CA0E-42D2-BF39-B33AF135CC4D" id=ieooui></object>
<style>
st1\:*{behavior:url(#ieooui) }
</style>
<![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;
	mso-font-charset:2;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:0 268435456 0 0 -2147483648 0;}
@font-face
	{font-family:宋体;
	panose-1:2 1 6 0 3 1 1 1 1 1;
	mso-font-alt:SimSun;
	mso-font-charset:134;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:3 135135232 16 0 262145 0;}
@font-face
	{font-family:"\@宋体";
	panose-1:2 1 6 0 3 1 1 1 1 1;
	mso-font-charset:134;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:3 135135232 16 0 262145 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
 /* Page Definitions */
 @page
	{mso-page-border-surround-header:no;
	mso-page-border-surround-footer:no;}
@page Section1
	{size:595.3pt 841.9pt;
	margin:72.0pt 90.0pt 72.0pt 90.0pt;
	mso-header-margin:42.55pt;
	mso-footer-margin:49.6pt;
	mso-paper-source:0;
	layout-grid:15.6pt;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:普通表格;
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:"";
	mso-padding-alt:0cm 5.4pt 0cm 5.4pt;
	mso-para-margin:0cm;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	mso-ansi-language:#0400;
	mso-fareast-language:#0400;
	mso-bidi-language:#0400;}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="3074"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=ZH-CN style='tab-interval:21.0pt;text-justify-trim:punctuation'>

<div class=Section1 style='layout-grid:15.6pt'>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><st1:chsdate Year="1899"
Month="12" Day="30" IsLunarDate="False" IsROCDate="False" w:st="on"><span
 lang=EN-US style='font-family:宋体;mso-hansi-font-family:"Times New Roman";
 color:black;mso-font-kerning:0pt'>6.8.1</span></st1:chsdate><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'> </span><span style='font-family:宋体;mso-hansi-font-family:
"Times New Roman";color:black;mso-font-kerning:0pt'>进程的创建<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp;</span></span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>新的进程通过克隆旧的程序（当前进程）而建立。<span lang=EN-US>fork() </span>和<span
lang=EN-US> clone()</span>（对于线程）系统调用可用来建立新的进程。这两个系统调用结束时，内核在系统的物理内存中为新的进程分配新的<span
lang=EN-US> task_struct </span>结构，同时为新进程要使用的堆栈分配物理页。<span lang=EN-US>Linux </span>还会为新的进程分配新的进程标识符。然后，新<span
lang=EN-US> task_struct </span>结构的地址保存在链表中，而旧进程的<span lang=EN-US> task_struct </span>结构内容被复制到新进程的<span
lang=EN-US> task_struct </span>结构中。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span style='font-family:
宋体;mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>在克隆进程时，<span
lang=EN-US>Linux </span>允许两个进程共享相同的资源。可共享的资源包括文件、信号处理程序和虚拟内存等（通过继承）。当某个资源被共享时，该资源的引用计数值会增加<span
lang=EN-US> 1</span>，从而只有两个进程均终止时，内核才会释放这些资源。图<span lang=EN-US> 6.23 </span>说明了父进程和子进程共享打开的文件。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=center style='text-align:center;text-indent:24.0pt;
mso-outline-level:1;layout-grid-mode:char;mso-layout-grid-align:none'><!--[if gte vml 1]><o:wrapblock><v:shapetype
  id="_x0000_t75" coordsize="21600,21600" o:spt="75" o:preferrelative="t"
  path="m@4@5l@4@11@9@11@9@5xe" filled="f" stroked="f">
  <v:stroke joinstyle="miter"/>
  <v:formulas>
   <v:f eqn="if lineDrawn pixelLineWidth 0"/>
   <v:f eqn="sum @0 1 0"/>
   <v:f eqn="sum 0 0 @1"/>
   <v:f eqn="prod @2 1 2"/>
   <v:f eqn="prod @3 21600 pixelWidth"/>
   <v:f eqn="prod @3 21600 pixelHeight"/>
   <v:f eqn="sum @0 0 1"/>
   <v:f eqn="prod @6 1 2"/>
   <v:f eqn="prod @7 21600 pixelWidth"/>
   <v:f eqn="sum @8 21600 0"/>
   <v:f eqn="prod @7 21600 pixelHeight"/>
   <v:f eqn="sum @10 21600 0"/>
  </v:formulas>
  <v:path o:extrusionok="f" gradientshapeok="t" o:connecttype="rect"/>
  <o:lock v:ext="edit" aspectratio="t"/>
 </v:shapetype><v:shape id="_x0000_s1027" type="#_x0000_t75" style='position:absolute;
  left:0;text-align:left;margin-left:416.9pt;margin-top:0;width:241.1pt;
  height:146.5pt;z-index:1;mso-position-vertical:top'>
  <v:imagedata src="6.8.1.files/image001.gif" o:title="image002"/>
  <w:wrap type="topAndBottom"/>
 </v:shape><![endif]--><![if !vml]><span style='mso-ignore:vglayout'>
 <table cellpadding=0 cellspacing=0>
  <tr>
   <td width=556 height=0></td>
  </tr>
  <tr>
   <td></td>
   <td><img width=321 height=195 src="6.8.1.files/image001.gif" v:shapes="_x0000_s1027"></td>
  </tr>
 </table>
 </span><![endif]><!--[if gte vml 1]></o:wrapblock><![endif]--><br
style='mso-ignore:vglayout' clear=ALL>
<span style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>图<span lang=EN-US> 6.23</span>父进程和子进程共享打开的文件<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span style='font-family:
宋体;mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>系统对进程虚拟内存的克隆过程则更加巧妙些。新的<span
lang=EN-US> vm_area_struct </span>结构、新进程自己的<span lang=EN-US> mm_struct </span>结构以及新进程的页表必须在一开始就准备好，但这时并不复制任何虚拟内存。如果旧进程的某些虚拟内存在物理内存中，而有些在交换文件中，那么虚拟内存的复制将会非常困难和费时。实际上，<span
lang=EN-US>Linux </span>采用了称为<b style='mso-bidi-font-weight:normal'>写时复制</b>的技术，也就是说，只有当两个进程中的任意一个向虚拟内存中写入数据时才复制相应的虚拟内存；而没有写入的任何内存页均可以在两个进程之间共享。代码页实际总是可以共享的。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span style='font-family:
宋体;mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>此外<span
lang=EN-US>,</span>内核线程是调用<span lang=EN-US>kernel_thread()</span>函数创建的<span
lang=EN-US>,</span>而<span lang=EN-US>kernel_thread()</span>在内核态调用了<span
lang=EN-US>clone()</span>系统调用。内核线程通常没有用户地址空间，即<span lang=EN-US>p-&gt;mm = NULL</span>，它总是直接访问内核地址空间。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span style='font-family:
宋体;mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>不管是<span
lang=EN-US>fork()</span>还是<span lang=EN-US>clone</span>（）系统调用，最终都调用了内核中的<span
lang=EN-US>do_fork()</span>，其源代码在<span lang=EN-US>kernel/fork.c</span>：<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span style='font-family:
宋体;mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>／<span
lang=EN-US>*<o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp; </span>*<span
style='mso-spacerun:yes'>&nbsp; </span>Ok, this is the main fork-routine. It
copies the system process<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp; </span>*
information (task[nr]) and sets up the necessary registers. It also<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp; </span>* copies the
data segment in its entirety.<span style='mso-spacerun:yes'>&nbsp; </span>The
&quot;stack_start&quot; and<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp; </span>*
&quot;stack_top&quot; arguments are simply passed along to the platform<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp; </span>* specific
copy_thread() routine.<span style='mso-spacerun:yes'>&nbsp; </span>Most
platforms ignore stack_top.<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp; </span>* For an
example that's using stack_top, see<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp; </span>*
arch/ia64/kernel/process.c.<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp; </span>*/<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>int do_fork(unsigned long clone_flags, unsigned long
stack_start,<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>struct pt_regs *regs, unsigned long stack_size)<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>{<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>int retval;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>struct task_struct *p;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>struct completion vfork;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>retval = -EPERM;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>/* <o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>* CLONE_PID is only allowed for the initial SMP swapper<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>* calls<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>*/<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>if
(clone_flags &amp; CLONE_PID) {<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>if (current-&gt;pid)<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>goto fork_out;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>}<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>retval = -ENOMEM;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>p =
alloc_task_struct();<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>if
(!p)<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>goto fork_out;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>*p =
*current;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>retval = -EAGAIN;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>/*<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>* Check if we are over our maximum process limit, but be sure to<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>* exclude root. This is needed to make it possible for login and<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>* friends to set the per-user process limit to something lower<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>* than the amount of processes root is running. -- Rik<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>*/<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;
</span>if (atomic_read(&amp;p-&gt;user-&gt;processes) &gt;=
p-&gt;rlim[RLIMIT_NPROC].rlim_cur<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>&amp;&amp;
!capable(CAP_SYS_ADMIN) !capable(CAP_SYS_RESOURCE))<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>goto bad_fork_free;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>atomic_inc(&amp;p-&gt;user-&gt;__count);<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>atomic_inc(&amp;p-&gt;user-&gt;processes);<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>/*<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>* Counter increases are protected by<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>* the kernel lock so nr_threads can't<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>* increase under us (but it may decrease).<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>*/<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>if (nr_threads &gt;= max_threads)<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>goto bad_fork_cleanup_count;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>get_exec_domain(p-&gt;exec_domain);<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>if (p-&gt;binfmt &amp;&amp; p-&gt;binfmt-&gt;module)<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>__MOD_INC_USE_COUNT(p-&gt;binfmt-&gt;module);<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>p-&gt;did_exec = 0;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>p-&gt;swappable = 0;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>p-&gt;state = TASK_UNINTERRUPTIBLE;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>copy_flags(clone_flags, p);<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>p-&gt;pid = get_pid(clone_flags);<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;</span>p-&gt;run_list.next = NULL;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>p-&gt;run_list.prev = NULL;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>p-&gt;p_cptr = NULL;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>init_waitqueue_head(&amp;p-&gt;wait_chldexit);<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>p-&gt;vfork_done = NULL;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>if (clone_flags &amp; CLONE_VFORK) {<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>p-&gt;vfork_done = &amp;vfork;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>init_completion(&amp;vfork);<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>}<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>spin_lock_init(&amp;p-&gt;alloc_lock);<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>p-&gt;sigpending = 0;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>init_sigpending(&amp;p-&gt;pending);<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>p-&gt;it_real_value = p-&gt;it_virt_value = p-&gt;it_prof_value = 0;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>p-&gt;it_real_incr = p-&gt;it_virt_incr = p-&gt;it_prof_incr = 0;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>init_timer(&amp;p-&gt;real_timer);<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>p-&gt;real_timer.data = (unsigned long) p;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>p-&gt;leader = 0;<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>/* session leadership doesn't inherit */<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>p-&gt;tty_old_pgrp = 0;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>p-&gt;times.tms_utime = p-&gt;times.tms_stime = 0;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>p-&gt;times.tms_cutime = p-&gt;times.tms_cstime = 0;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp; </span>#ifdef
CONFIG_SMP<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>{<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>int i;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>p-&gt;cpus_runnable = ~0UL;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>p-&gt;processor = current-&gt;processor;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>/* ?? should we just memset this ?? */<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>for(i = 0; i &lt; smp_num_cpus; i++)<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>p-&gt;per_cpu_utime[i] = p-&gt;per_cpu_stime[i] = 0;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>spin_lock_init(&amp;p-&gt;sigmask_lock);<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>}<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp; </span>#endif<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>p-&gt;lock_depth = -1;<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>/* -1 = no lock */<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>p-&gt;start_time = jiffies;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp; </span><o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-outline-level:1;layout-grid-mode:char;mso-layout-grid-align:none'><span
lang=EN-US style='font-family:宋体;mso-hansi-font-family:"Times New Roman";
color:black;mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>INIT_LIST_HEAD(&amp;p-&gt;local_pages);<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp; </span><o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>retval = -ENOMEM;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>/* copy all the process information */<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>if (copy_files(clone_flags, p))<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>goto bad_fork_cleanup;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>if (copy_fs(clone_flags, p))<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>goto bad_fork_cleanup_files;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>if (copy_sighand(clone_flags, p))<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>goto bad_fork_cleanup_fs;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>if (copy_mm(clone_flags, p))<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>goto bad_fork_cleanup_sighand;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>retval = copy_thread(0, clone_flags, stack_start, stack_size, p, regs);<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>if (retval)<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>goto bad_fork_cleanup_mm;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>p-&gt;semundo = NULL;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>/* Our parent execution domain becomes current domain<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>These must match for thread signalling to apply */<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>p-&gt;parent_exec_id = p-&gt;self_exec_id;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp; </span><o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>/* ok, now we should be set up.. */<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>p-&gt;swappable = 1;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>p-&gt;exit_signal = clone_flags &amp; CSIGNAL;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>p-&gt;pdeath_signal = 0;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp; </span><o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>/*<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>* &quot;share&quot; dynamic priority between parent and child, thus the<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>* total amount of dynamic priorities in the system doesnt change,<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>* more scheduling fairness. This is only important in the first<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>* timeslice, on the long run the scheduling behaviour is unchanged.<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>*/<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>p-&gt;counter = (current-&gt;counter + 1) &gt;&gt; 1;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>current-&gt;counter &gt;&gt;= 1;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>if (!current-&gt;counter)<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>current-&gt;need_resched = 1;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp;</span><o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>/*<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>* Ok, add it to the run-queues and make it<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>* visible to the rest of the system.<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>*<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>* Let it rip!<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>*/<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>retval = p-&gt;pid;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>p-&gt;tgid = retval;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>INIT_LIST_HEAD(&amp;p-&gt;thread_group);<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp;</span><o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>/* Need tasklist lock for parent etc handling! */<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>write_lock_irq(&amp;tasklist_lock);<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp;</span><o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>/* CLONE_PARENT and CLONE_THREAD re-use the old parent */<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>p-&gt;p_opptr = current-&gt;p_opptr;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>p-&gt;p_pptr = current-&gt;p_pptr;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>if (!(clone_flags &amp; (CLONE_PARENT | CLONE_THREAD))) {<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>p-&gt;p_opptr = current;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>if (!(p-&gt;ptrace &amp; PT_PTRACED))<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>p-&gt;p_pptr = current;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>}<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp; </span><o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>if (clone_flags &amp; CLONE_THREAD) {<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>p-&gt;tgid = current-&gt;tgid;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>list_add(&amp;p-&gt;thread_group, &amp;current-&gt;thread_group);<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>}<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp;</span><o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>SET_LINKS(p);<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>hash_pid(p);<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>nr_threads++;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>write_unlock_irq(&amp;tasklist_lock);<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp; </span><o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>if (p-&gt;ptrace &amp; PT_PTRACED)<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>send_sig(SIGSTOP, p, 1);<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp; </span><o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>wake_up_process(p);<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>/* do this last */<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>++total_forks;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>if (clone_flags &amp; CLONE_VFORK)<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>wait_for_completion(&amp;vfork);<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp;</span><o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp; </span>fork_out:<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>return retval;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp;</span><o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp;
</span>bad_fork_cleanup_mm:<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>exit_mm(p);<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp;
</span>bad_fork_cleanup_sighand:<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>exit_sighand(p);<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp;
</span>bad_fork_cleanup_fs:<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>exit_fs(p); /* blocking */<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp;
</span>bad_fork_cleanup_files:<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>exit_files(p); /* blocking */<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp;
</span>bad_fork_cleanup:<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>put_exec_domain(p-&gt;exec_domain);<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>if (p-&gt;binfmt &amp;&amp; p-&gt;binfmt-&gt;module)<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>__MOD_DEC_USE_COUNT(p-&gt;binfmt-&gt;module);<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp;
</span>bad_fork_cleanup_count:<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>atomic_dec(&amp;p-&gt;user-&gt;processes);<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>free_uid(p-&gt;user);<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp;
</span>bad_fork_free:<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>free_task_struct(p);<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>goto
fork_out;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp; </span>}<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span style='font-family:
宋体;mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>尽管<span
lang=EN-US>fork</span>（）系统调用因为传递用户堆栈和寄存器参数而与特定的平台相关，但实际上<span lang=EN-US>do_fork()</span>所做的工作还是可移植的。下面给出对以上代码的解释：<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='margin-left:21.25pt;text-align:left;
text-indent:-21.25pt;tab-stops:list 21.25pt;layout-grid-mode:char;mso-layout-grid-align:
none'><span style='font-family:宋体;mso-hansi-font-family:Wingdings;mso-bidi-font-family:
宋体;color:black;mso-font-kerning:0pt'>・</span><span lang=EN-US style='font-size:
7.0pt;color:black;mso-font-kerning:0pt'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>给局部变量赋初值<span lang=EN-US>-ENOMEM</span>，当分配一个新的<span
lang=EN-US>task_struc</span>结构失败时就返回这个错误值。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='margin-left:21.25pt;text-align:left;
text-indent:-21.25pt;tab-stops:list 21.25pt;layout-grid-mode:char;mso-layout-grid-align:
none'><span style='font-family:宋体;mso-hansi-font-family:Wingdings;mso-bidi-font-family:
宋体;color:black;mso-font-kerning:0pt'>・</span><span lang=EN-US style='font-size:
7.0pt;color:black;mso-font-kerning:0pt'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>如果在<span lang=EN-US>clone_flags</span>中设置了<span
lang=EN-US>CLONE_PID</span>标志，就返回一个错误（<span lang=EN-US>-EPERM</span>）。因为<span
lang=EN-US>CLONE_PID</span>有特殊的作用，当这个标志为<span lang=EN-US>1</span>时，父、子进程（线程）共用一个进程号，也就是说，子进程虽然有自己的<span
lang=EN-US>task_struct</span>结构，却使用父进程的<span lang=EN-US>pid</span>。但是，只有<span
lang=EN-US>0</span>号进程（即系统中的空线程）才允许使用这个标志。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='margin-left:21.25pt;text-align:left;
text-indent:-21.25pt;tab-stops:list 21.25pt;layout-grid-mode:char;mso-layout-grid-align:
none'><span style='font-family:宋体;mso-hansi-font-family:Wingdings;mso-bidi-font-family:
宋体;color:black;mso-font-kerning:0pt'>・</span><span lang=EN-US style='font-size:
7.0pt;color:black;mso-font-kerning:0pt'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>调用<span lang=EN-US>alloc_task_struct()</span>为子进程分配两个连续的物理页面，低端用来存放子进程的<span
lang=EN-US>task_struct</span>结构，高端用作其内核空间的堆栈。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='margin-left:21.25pt;text-align:left;
text-indent:-21.25pt;tab-stops:list 21.25pt;layout-grid-mode:char;mso-layout-grid-align:
none'><span style='font-family:宋体;mso-hansi-font-family:Wingdings;mso-bidi-font-family:
宋体;color:black;mso-font-kerning:0pt'>・</span><span lang=EN-US style='font-size:
7.0pt;color:black;mso-font-kerning:0pt'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>用结构赋值语句<span lang=EN-US>*p = *current</span>把当前进程<span
lang=EN-US>task_struct</span>结构中的所有内容都拷贝到新进程中。稍后，子进程不该继承的域会被设置成正确的值。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='margin-left:21.25pt;text-align:left;
text-indent:-21.25pt;tab-stops:list 21.25pt;layout-grid-mode:char;mso-layout-grid-align:
none'><span style='font-family:宋体;mso-hansi-font-family:Wingdings;mso-bidi-font-family:
宋体;color:black;mso-font-kerning:0pt'>・</span><span lang=EN-US style='font-size:
7.0pt;color:black;mso-font-kerning:0pt'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>在<span lang=EN-US>task_struct</span>结构中有个指针<span
lang=EN-US>user</span>，用来指向一个<span lang=EN-US>user_struct</span>结构。一个用户常常有多个进程，所以有关用户的信息并不专属于某一个进程。这样，属于同一用户的进程就可以通过指针<span
lang=EN-US>user</span>共享这些信息。显然，每个用户有且只有一个<span lang=EN-US>user_struct</span>结构。该结构中有一个引用计数器<span
lang=EN-US>count</span>，对属于该用户的进程数量进行计数。可想而知，内核线程并不属于某个用户，所以其<span lang=EN-US>task_struct</span>中的<span
lang=EN-US>user</span>指针为<span lang=EN-US>0</span>。每个进程<span lang=EN-US>task_struct</span>结构中有个数组<span
lang=EN-US>rlim</span>，对该进程占用各种资源的数量作出限制，而<span lang=EN-US>rlim</span></span><span
lang=EN-US style='font-size:9.5pt;mso-bidi-font-size:10.0pt;font-family:宋体;
mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>[RLIMIT_NPROC]</span><span
style='font-size:9.5pt;mso-bidi-font-size:10.0pt;font-family:宋体;mso-hansi-font-family:
"Times New Roman";color:black;mso-font-kerning:0pt'>就规定了该进程所属用户可以拥有的进程数量。所以，如果当前进程是一个用户进程，并且该用户拥有的进程数量已经达到了规定的界限值，就不允许它<span
lang=EN-US>fork()</span>了。</span><span lang=EN-US style='font-family:宋体;
mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'><o:p></o:p></span></p>

<p class=MsoNormal align=left style='margin-left:21.25pt;text-align:left;
text-indent:-21.25pt;tab-stops:list 21.25pt;layout-grid-mode:char;mso-layout-grid-align:
none'><span style='font-family:宋体;mso-hansi-font-family:Wingdings;mso-bidi-font-family:
宋体;color:black;mso-font-kerning:0pt'>・</span><span lang=EN-US style='font-size:
7.0pt;color:black;mso-font-kerning:0pt'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>除了检查每个用户拥有的进程数量外，接着要检查系统中的任务总数（所有用户的进程数加系统的内核线程数）是否超过了最大值<span
lang=EN-US>max_threads</span>，如果是，也不允许再创建子进程。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='margin-left:21.25pt;text-align:left;
text-indent:-21.25pt;tab-stops:list 21.25pt;layout-grid-mode:char;mso-layout-grid-align:
none'><span style='font-family:宋体;mso-hansi-font-family:Wingdings;mso-bidi-font-family:
宋体;color:black;mso-font-kerning:0pt'>・</span><span lang=EN-US style='font-size:
7.0pt;color:black;mso-font-kerning:0pt'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>一个进程除了属于某个用户外，还属于某个“执行域”。<span lang=EN-US> Linux</span>可以运行<span
lang=EN-US>X86</span>平台上其它<span lang=EN-US>Unix</span>类操作系统生成的符合<span
lang=EN-US>iBCS2</span>标准的程序。例如，一个进程所执行的程序是为<span lang=EN-US>Solaris</span>开发的，那么这个进程就属于<span
lang=EN-US>Solaris</span>执行域<span lang=EN-US>PER_SOLARIS</span>。当然，在<span
lang=EN-US>Linux</span>上运行的绝大多数程序属于<span lang=EN-US>Linux</span>执行域。在<span
lang=EN-US>task_struct</span>有一个指针<span lang=EN-US>exec_doman</span>，指向一个<span
lang=EN-US>exec_doman</span>结构。在<span lang=EN-US>exec_doman</span>结构中有一个域是<span
lang=EN-US>module</span>，这是指向某个<span lang=EN-US>module</span>结构的指针。在<span
lang=EN-US>Linux</span>中，一个文件系统或驱动程序都可以作为一个单独的模块进行编译，并动态地链接到内核中。在<span
lang=EN-US>module</span>结构中有一个计数器<span lang=EN-US>count</span>，用来统计几个进程需要使用这个模块。因此，<span
lang=EN-US>get_exec_domain(p-&gt;exec_domain)</span>递增模块结构<span lang=EN-US>module</span>中的计数器。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='margin-left:21.25pt;text-align:left;
text-indent:-21.25pt;tab-stops:list 21.25pt;layout-grid-mode:char;mso-layout-grid-align:
none'><span style='font-family:宋体;mso-hansi-font-family:Wingdings;mso-bidi-font-family:
宋体;color:black;mso-font-kerning:0pt'>・</span><span lang=EN-US style='font-size:
7.0pt;color:black;mso-font-kerning:0pt'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>另外，每个进程所执行的程序属于某种可执行映像格式，如<span lang=EN-US>a.out</span>格式、<span
lang=EN-US>elf</span>格式、甚至<span lang=EN-US>java</span>虚拟机格式。对于不同格式的支持通常是通过动态安装的模块来实现的。所以，<span
lang=EN-US>task_struct</span>中有一个执行<span lang=EN-US>linux_binfmt</span>结构的指针<span
lang=EN-US>binfmt</span>，而<span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>__MOD_INC_USE_COUNT</span>（）就是对有关模块的使用计数进行递增。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='margin-left:21.25pt;text-align:left;
text-indent:-21.25pt;tab-stops:list 21.25pt;layout-grid-mode:char;mso-layout-grid-align:
none'><span style='font-family:宋体;mso-hansi-font-family:Wingdings;mso-bidi-font-family:
宋体;color:black;mso-font-kerning:0pt'>・</span><span lang=EN-US style='font-size:
7.0pt;color:black;mso-font-kerning:0pt'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>紧接着为什么要把进程的状态设置成为<span lang=EN-US>TASK_UNINTERRUPTIBLE</span>？这是因为后面<span
lang=EN-US>get_pid()</span>的操作必须独占，子进程可能因为一时进不了临界区而只好暂时进入睡眠状态。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='margin-left:21.25pt;text-align:left;
text-indent:-21.25pt;tab-stops:list 21.25pt;layout-grid-mode:char;mso-layout-grid-align:
none'><span style='font-family:宋体;mso-hansi-font-family:Wingdings;mso-bidi-font-family:
宋体;color:black;mso-font-kerning:0pt'>・</span><span lang=EN-US style='font-size:
7.0pt;color:black;mso-font-kerning:0pt'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='font-family:宋体;mso-hansi-font-family:"Times New Roman";
color:black;mso-font-kerning:0pt'>copy_flags</span><span style='font-family:
宋体;mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>（）函数将<span
lang=EN-US>clone_flags</span>参数中的标志位略加补充和变换，然后写入<span lang=EN-US>p-&gt;flags</span>。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='margin-left:21.25pt;text-align:left;
text-indent:-21.25pt;tab-stops:list 21.25pt;layout-grid-mode:char;mso-layout-grid-align:
none'><span style='font-family:宋体;mso-hansi-font-family:Wingdings;mso-bidi-font-family:
宋体;color:black;mso-font-kerning:0pt'>・</span><span lang=EN-US style='font-size:
7.0pt;color:black;mso-font-kerning:0pt'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='font-family:宋体;mso-hansi-font-family:"Times New Roman";
color:black;mso-font-kerning:0pt'>get_pid</span><span style='font-family:宋体;
mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>（）函数根据<span
lang=EN-US>clone_flags</span>中标志位<span lang=EN-US>ClONE_PID</span>的值，或返回父进程<span
lang=EN-US>(</span>当前进程<span lang=EN-US>)</span>的<span lang=EN-US>pid</span>，或返回一个新的<span
lang=EN-US>pid</span>。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='margin-left:21.25pt;text-align:left;
text-indent:-21.25pt;tab-stops:list 21.25pt;layout-grid-mode:char;mso-layout-grid-align:
none'><span style='font-family:宋体;mso-hansi-font-family:Wingdings;mso-bidi-font-family:
宋体;color:black;mso-font-kerning:0pt'>・</span><span lang=EN-US style='font-size:
7.0pt;color:black;mso-font-kerning:0pt'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>前面在复制父进程的<span lang=EN-US>task_struct</span>结构时把父进程的所有域都照抄过来，但实际上很多域的值必须重新赋初值，因此，后面的赋值语句就是对子进程<span
lang=EN-US>task_struct</span>结构的初始化。其中<span lang=EN-US>start_time</span>表示进程创建的时间，而全局变量<span
lang=EN-US>jiffies</span>就是从系统初始化开始至当前的是时钟滴答数。<span lang=EN-US>local_pages</span>表示属于该进程的局部页面形成一个双向链表，在此进行了初始化。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='margin-left:21.25pt;text-align:left;
text-indent:-21.25pt;tab-stops:list 21.25pt;layout-grid-mode:char;mso-layout-grid-align:
none'><span style='font-family:宋体;mso-hansi-font-family:Wingdings;mso-bidi-font-family:
宋体;color:black;mso-font-kerning:0pt'>・</span><span lang=EN-US style='font-size:
7.0pt;color:black;mso-font-kerning:0pt'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='font-family:宋体;mso-hansi-font-family:"Times New Roman";
color:black;mso-font-kerning:0pt'>copy_files()</span><span style='font-family:
宋体;mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>有条件地复制已打开文件的控制结构，也就是说，这种复制只有在<span
lang=EN-US>clone_flags</span>中的<span lang=EN-US>CLONE_FILES</span>标志为<span
lang=EN-US>0</span>时才真正进行，否则只是共享父进程的已打开文件。当一个进程有已打开文件时，<span lang=EN-US>task_struct</span>结构中的指针<span
lang=EN-US>files</span>指向一个<span lang=EN-US>fiel_struct</span>结构，否则为<span
lang=EN-US>0</span>。所有与终端设备<span lang=EN-US>tty</span>相联系的用户进程的头三个标准文件<span
lang=EN-US>stdin</span>、<span lang=EN-US>stdout</span>及<span lang=EN-US>stderr</span>都是预先打开的，所以指针一般不为空。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='margin-left:21.25pt;text-align:left;
text-indent:-21.25pt;tab-stops:list 21.25pt;layout-grid-mode:char;mso-layout-grid-align:
none'><span style='font-family:宋体;mso-hansi-font-family:Wingdings;mso-bidi-font-family:
宋体;color:black;mso-font-kerning:0pt'>・</span><span lang=EN-US style='font-size:
7.0pt;color:black;mso-font-kerning:0pt'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='font-family:宋体;mso-hansi-font-family:"Times New Roman";
color:black;mso-font-kerning:0pt'>copy_fs()</span><span style='font-family:
宋体;mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>也是只有在<span
lang=EN-US>clone_flags</span>中的<span lang=EN-US>CLONE_FS</span>标志为<span
lang=EN-US>0</span>时才加以复制。在<span lang=EN-US>task_struct</span>中有一个指向<span
lang=EN-US>fs_struct</span>结构的指针，<span lang=EN-US>fs_struct</span>结构中存放的是进程的根目录<span
lang=EN-US>root</span>、当前工作目录<span lang=EN-US>pwd</span>、一个用于文件操作权限的<span
lang=EN-US>umask</span>，还有一个计数器。类似地，<span lang=EN-US>copy_sighand</span>（）也是只有在<span
lang=EN-US>CLONE_SIGHAND</span>为<span lang=EN-US>0</span>时才真正复制父进程的信号结构，否则就共享父进程的。信号是进程间通信的一种手段，信号随时都可以发向一个进程，就像中断随时都可以发向一个处理器一样。进程可以为各种信号设置相应的信号处理程序，一旦进程设置了信号处理程序，其<span
lang=EN-US>task_struct</span>结构中的指针<span lang=EN-US>sig</span>就指向<span
lang=EN-US>signal_struct</span>结构（定义于<span lang=EN-US>include/linux/sched.h</span>）。关于信号的具体内容将在下一章进行介绍。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='margin-left:21.25pt;text-align:left;
text-indent:-21.25pt;tab-stops:list 21.25pt;layout-grid-mode:char;mso-layout-grid-align:
none'><span style='font-family:宋体;mso-hansi-font-family:Wingdings;mso-bidi-font-family:
宋体;color:black;mso-font-kerning:0pt'>・</span><span lang=EN-US style='font-size:
7.0pt;color:black;mso-font-kerning:0pt'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>用户空间的继承是通过<span lang=EN-US>copy_mm()</span>函数完成的。进程的<span
lang=EN-US>task_struct</span>结构中有一个指针<span lang=EN-US>mm</span>，就指向代表着进程地址空间的<span
lang=EN-US>mm_struct</span>结构。对<span lang=EN-US>mm_struct</span>的复制也是在<span
lang=EN-US>clone_flags</span>中的<span lang=EN-US>CLONE_VM</span>标志为<span
lang=EN-US>0</span>时才真正进行，否则，就只是通过已经复制的指针共享父进程的用户空间。对<span lang=EN-US>mm_struct</span>的复制不只限于这个数据结构本身，还包括了对更深层次数据结构的复制，其中最主要的是<span
lang=EN-US>vm_area_struct</span>结构和页表的复制，这是由同一文件中的<span lang=EN-US>dum_mmap()</span>函数完成的。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='margin-left:21.25pt;text-align:left;
text-indent:-21.25pt;tab-stops:list 21.25pt;layout-grid-mode:char;mso-layout-grid-align:
none'><span style='font-family:宋体;mso-hansi-font-family:Wingdings;mso-bidi-font-family:
宋体;color:black;mso-font-kerning:0pt'>・</span><span lang=EN-US style='font-size:
7.0pt;color:black;mso-font-kerning:0pt'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>到此为止，<span lang=EN-US>task_struct</span>结构中的域基本复制好了，但是用于内核堆栈的内容还没有复制，这就是<span
lang=EN-US>copy_thread</span>（）的责任了。<span lang=EN-US>copy_thread</span>（）函数与平台相关，定义于<span
lang=EN-US>arch/i386/kernel/process.c</span>中。<span lang=EN-US>copy_thread</span>（）实际上只复制父进程的内核空间堆栈。堆栈中的内容记录了父进程通过系统调用<span
lang=EN-US>fork()</span>进入内核空间、然后又进入<span lang=EN-US>copy_thread</span>（）函数的整个历程，子进程将要循相同的路线返回，所以要把它复制给子进程。但是，如果父子进程的内核空间堆栈完全相同，那返回用户空间后就无法区分哪个是子进程了，所以，复制以后还要略作调整。有兴趣的读者可以结合第三、四章内容去读该函数的源代码。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='margin-left:21.25pt;text-align:left;
text-indent:-21.25pt;tab-stops:list 21.25pt;layout-grid-mode:char;mso-layout-grid-align:
none'><span style='font-family:宋体;mso-hansi-font-family:Wingdings;mso-bidi-font-family:
宋体;color:black;mso-font-kerning:0pt'>・</span><span lang=EN-US style='font-size:
7.0pt;color:black;mso-font-kerning:0pt'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='font-family:宋体;mso-hansi-font-family:"Times New Roman";
color:black;mso-font-kerning:0pt'>parent_exec_id</span><span style='font-family:
宋体;mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>表示父进程的执行域，<span
lang=EN-US>p-&gt;self_exec_id</span>是本进程（子进程）的执行域，<span lang=EN-US>swappable</span>表示本进程的页面可以被换出。<span
lang=EN-US>exit_signal</span>为本进程执行<span lang=EN-US>exit()</span>系统调用时向父进程发出的信号，<span
lang=EN-US>pdeath_signal</span>为要求父进程在执行<span lang=EN-US>exit</span>（）时向本进程发出的信号。另外，<span
lang=EN-US>counter</span>域的值是进程的时间片（以时钟滴达为单位），代码中将父进程的时间片分成两半，让父、子进程各有原值的一半。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='margin-left:21.25pt;text-align:left;
text-indent:-21.25pt;tab-stops:list 21.25pt;layout-grid-mode:char;mso-layout-grid-align:
none'><span style='font-family:宋体;mso-hansi-font-family:Wingdings;mso-bidi-font-family:
宋体;color:black;mso-font-kerning:0pt'>・</span><span lang=EN-US style='font-size:
7.0pt;color:black;mso-font-kerning:0pt'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>进程创建后必须处于某一组中，这是通过<span lang=EN-US>task_struct</span>结构中的队列头<span
lang=EN-US>thread_group</span>与父进程链接起来，形成一个进程组（注意，<span lang=EN-US>thread</span>并不单指线程，内核代码中经常用<span
lang=EN-US>thread</span>通指所有的进程）。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='margin-left:21.25pt;text-align:left;
text-indent:-21.25pt;tab-stops:list 21.25pt;layout-grid-mode:char;mso-layout-grid-align:
none'><span style='font-family:宋体;mso-hansi-font-family:Wingdings;mso-bidi-font-family:
宋体;color:black;mso-font-kerning:0pt'>・</span><span lang=EN-US style='font-size:
7.0pt;color:black;mso-font-kerning:0pt'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>建立进程的家族关系。先建立起子进程的祖先和双亲（当然还没有兄弟和孩子），然后通过<span lang=EN-US>SET_LINKS</span>（）宏将子进程的<span
lang=EN-US>task_struct</span>结构插入到内核中其它进程组成的双向链表中。通过<span lang=EN-US>hash_pid()</span>将其链入按其<span
lang=EN-US>pid</span>计算得的哈希表中（参看第三章进程的组成方式一节）。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='margin-left:21.25pt;text-align:left;
text-indent:-21.25pt;tab-stops:list 21.25pt;layout-grid-mode:char;mso-layout-grid-align:
none'><span style='font-family:宋体;mso-hansi-font-family:Wingdings;mso-bidi-font-family:
宋体;color:black;mso-font-kerning:0pt'>・</span><span lang=EN-US style='font-size:
7.0pt;color:black;mso-font-kerning:0pt'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>最后，通过<span lang=EN-US>wake_up_process()</span>将子进程唤醒，也就是将其挂入可执行队列等待被调度。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='margin-left:21.25pt;text-align:left;
text-indent:-21.25pt;tab-stops:list 21.25pt;layout-grid-mode:char;mso-layout-grid-align:
none'><span style='font-family:宋体;mso-hansi-font-family:Wingdings;mso-bidi-font-family:
宋体;color:black;mso-font-kerning:0pt'>・</span><span lang=EN-US style='font-size:
7.0pt;color:black;mso-font-kerning:0pt'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>但是，还有一种特殊情况必须考虑。当参数<span lang=EN-US>clone_flags</span>中<span
lang=EN-US>CLONE_VFORK</span>标志位为<span lang=EN-US>1</span>时，一定要保证子进程先运行，一直到子进程通过系统调用<span
lang=EN-US>execve()</span>执行一个新的可执行程序或通过系统调用<span lang=EN-US>exit()</span>退出系统时，才可以恢复父进程的执行，这是通过<span
lang=EN-US>wait_for_completion</span>（）函数实现的。为什么要这样做呢？这是因为当<span lang=EN-US>CLONE_VFORK</span>标志位为<span
lang=EN-US>1</span>时，就说明父、子进程通过指针共享用户空间（指向相同的<span lang=EN-US>mm_struct</span>结构），那也说明父进程写入用户空间的内容同时也写入了子进程的用户空间，反之亦然。如果说，在这种情况下，父子进程对数据区的写入可能引起问题的话，那么，对堆栈区的写入可能就是致命的了。而对子程序或函数的调用肯定就是对堆栈的写入。由此可见，在这种情况下，决不能让两个进程都回到用户空间并发执行，否则，必然导致两个进程的互相“捣乱”或因非法访问而死亡。解决的办法的只能是“扣留”其中的一个进程，而让另一个进程先回到用户空间，直到两个进程不再共享它们的用户空间，或其中一个进程消亡为止（肯定是先回到用户空间的进程先消亡）。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;layout-grid-mode:char;
mso-layout-grid-align:none'><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman";color:black;mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:21.25pt;
layout-grid-mode:char;mso-layout-grid-align:none'><span style='font-family:
宋体;mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>到此为止，子进程的创建已经完成，该是从内核态返回用户态的时候了。实际上，<span
lang=EN-US>fork()</span>系统调用执行之后，父子进程返回到用户空间中相同的的地址，用户进程根据<span lang=EN-US>fork()</span>的返回值分别安排父子进程执行不同的代码。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='layout-grid-mode:char'><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

</div>

</body>

</html>
