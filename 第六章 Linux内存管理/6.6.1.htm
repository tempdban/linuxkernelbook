<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0072)http://www.kerneltravel.net/kernel-book/第六章%20Linux内存管理/6.6.1.htm -->
<HTML xmlns="http://www.w3.org/TR/REC-html40" xmlns:o = 
"urn:schemas-microsoft-com:office:office" xmlns:w = 
"urn:schemas-microsoft-com:office:word" xmlns:st1 = 
"urn:schemas-microsoft-com:office:smarttags"><HEAD><TITLE>交换的基本原理</TITLE>
<META http-equiv=Content-Type content="text/html; charset=gb2312">
<META content=Word.Document name=ProgId>
<META content="MSHTML 6.00.3790.4324" name=GENERATOR>
<META content="Microsoft Word 11" name=Originator><LINK 
href="6.6.1.files/filelist.xml" rel=File-List><o:SmartTagType downloadurl="" 
name="chsdate" 
namespaceuri="urn:schemas-microsoft-com:office:smarttags"></o:SmartTagType><!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>CLJ</o:Author>
  <o:Template>Normal</o:Template>
  <o:LastAuthor>CLJ</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>0</o:TotalTime>
  <o:Created>2007-08-15T08:12:00Z</o:Created>
  <o:LastSaved>2007-08-15T08:12:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>618</o:Words>
  <o:Characters>3523</o:Characters>
  <o:Lines>29</o:Lines>
  <o:Paragraphs>8</o:Paragraphs>
  <o:CharactersWithSpaces>4133</o:CharactersWithSpaces>
  <o:Version>11.5606</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:GrammarState>Clean</w:GrammarState>
  <w:PunctuationKerning/>
  <w:DrawingGridVerticalSpacing>7.8 磅</w:DrawingGridVerticalSpacing>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>2</w:DisplayVerticalDrawingGridEvery>
  <w:ValidateAgainstSchemas/>
  <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>
  <w:IgnoreMixedContent>false</w:IgnoreMixedContent>
  <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>
  <w:Compatibility>
   <w:SpaceForUL/>
   <w:BalanceSingleByteDoubleByteWidth/>
   <w:DoNotLeaveBackslashAlone/>
   <w:ULTrailSpace/>
   <w:DoNotExpandShiftReturn/>
   <w:AdjustLineHeightInTable/>
   <w:BreakWrappedTables/>
   <w:SnapToGridInCell/>
   <w:WrapTextWithPunct/>
   <w:UseAsianBreakRules/>
   <w:DontGrowAutofit/>
   <w:UseFELayout/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:LatentStyles DefLockedState="false" LatentStyleCount="156">
 </w:LatentStyles>
</xml><![endif]--><!--[if !mso]>
<OBJECT id=ieooui classid=clsid:38481807-CA0E-42D2-BF39-B33AF135CC4D></OBJECT>
<STYLE>st1\:* {
	BEHAVIOR: url(#ieooui)
}
</STYLE>
<![endif]-->
<STYLE>@font-face {
	font-family: Wingdings;
}
@font-face {
	font-family: 宋体;
}
@font-face {
	font-family: @宋体;
}
@page  {mso-page-border-surround-header: no; mso-page-border-surround-footer: no; }
@page Section1 {size: 595.3pt 841.9pt; margin: 72.0pt 90.0pt 72.0pt 90.0pt; mso-header-margin: 42.55pt; mso-footer-margin: 49.6pt; mso-paper-source: 0; layout-grid: 15.6pt; }
P.MsoNormal {
	TEXT-JUSTIFY: inter-ideograph; FONT-SIZE: 10.5pt; MARGIN: 0cm 0cm 0pt; FONT-FAMILY: "Times New Roman"; TEXT-ALIGN: justify; mso-style-parent: ""; mso-pagination: none; mso-bidi-font-size: 10.0pt; mso-fareast-font-family: 宋体; mso-font-kerning: 1.0pt
}
LI.MsoNormal {
	TEXT-JUSTIFY: inter-ideograph; FONT-SIZE: 10.5pt; MARGIN: 0cm 0cm 0pt; FONT-FAMILY: "Times New Roman"; TEXT-ALIGN: justify; mso-style-parent: ""; mso-pagination: none; mso-bidi-font-size: 10.0pt; mso-fareast-font-family: 宋体; mso-font-kerning: 1.0pt
}
DIV.MsoNormal {
	TEXT-JUSTIFY: inter-ideograph; FONT-SIZE: 10.5pt; MARGIN: 0cm 0cm 0pt; FONT-FAMILY: "Times New Roman"; TEXT-ALIGN: justify; mso-style-parent: ""; mso-pagination: none; mso-bidi-font-size: 10.0pt; mso-fareast-font-family: 宋体; mso-font-kerning: 1.0pt
}
P.MsoDate {
	FONT-WEIGHT: bold; TEXT-JUSTIFY: inter-ideograph; FONT-SIZE: 10.5pt; MARGIN: 0cm 0cm 0pt; COLOR: black; FONT-FAMILY: 宋体; TEXT-ALIGN: justify; mso-pagination: none; mso-bidi-font-size: 10.0pt; mso-style-next: 正文; mso-hansi-font-family: "Times New Roman"; mso-bidi-font-family: "Times New Roman"; mso-bidi-font-weight: normal
}
LI.MsoDate {
	FONT-WEIGHT: bold; TEXT-JUSTIFY: inter-ideograph; FONT-SIZE: 10.5pt; MARGIN: 0cm 0cm 0pt; COLOR: black; FONT-FAMILY: 宋体; TEXT-ALIGN: justify; mso-pagination: none; mso-bidi-font-size: 10.0pt; mso-style-next: 正文; mso-hansi-font-family: "Times New Roman"; mso-bidi-font-family: "Times New Roman"; mso-bidi-font-weight: normal
}
DIV.MsoDate {
	FONT-WEIGHT: bold; TEXT-JUSTIFY: inter-ideograph; FONT-SIZE: 10.5pt; MARGIN: 0cm 0cm 0pt; COLOR: black; FONT-FAMILY: 宋体; TEXT-ALIGN: justify; mso-pagination: none; mso-bidi-font-size: 10.0pt; mso-style-next: 正文; mso-hansi-font-family: "Times New Roman"; mso-bidi-font-family: "Times New Roman"; mso-bidi-font-weight: normal
}
SPAN.GramE {
	mso-style-name: ""; mso-gram-e: yes
}
DIV.Section1 {
	page: Section1
}
OL {
	MARGIN-BOTTOM: 0cm
}
UL {
	MARGIN-BOTTOM: 0cm
}
</STYLE>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:普通表格;
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:"";
	mso-padding-alt:0cm 5.4pt 0cm 5.4pt;
	mso-para-margin:0cm;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";
	mso-ansi-language:#0400;
	mso-fareast-language:#0400;
	mso-bidi-language:#0400;}
</style>
<![endif]--></HEAD>
<BODY lang=ZH-CN style="TEXT-JUSTIFY-TRIM: punctuation; tab-interval: 21.0pt">
<DIV class=Section1 style="LAYOUT-GRID:  15.6pt none">
<P class=MsoDate style="mso-outline-level: 1"><st1:chsdate w:st="on" 
IsROCDate="False" IsLunarDate="False" Day="30" Month="12" Year="1899"><SPAN 
lang=EN-US>6.6.1</SPAN></st1:chsdate><SPAN lang=EN-US> </SPAN>交换的基本原理</P>
<P class=MsoNormal style="TEXT-INDENT: 21pt"><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">如前所述，每个进程的可以使用的虚存空间很大（</SPAN><SPAN 
lang=EN-US>3GB</SPAN><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">），但实际使用的空间并不大，一般不会超过几</SPAN><SPAN 
lang=EN-US>MB</SPAN><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">，大多数情况下只有几十</SPAN><SPAN 
lang=EN-US>K</SPAN><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">或几百</SPAN><SPAN 
lang=EN-US>K</SPAN><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">。可是，当系统的进程数达到几百甚至上千<SPAN 
class=GramE>个</SPAN>时，对存储空间的总需求就很大，在这种情况下，一般的物理内存量就很难满足要求。因此，在计算机技术的发展史上很早就有了把内存的内容与一个专用的磁盘空间交换的技术，在</SPAN><SPAN 
lang=EN-US>Linux</SPAN><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">中，我们把用作交换的磁盘空间叫做<B 
style="mso-bidi-font-weight: normal">交换文件或交换区</B>。</SPAN></P>
<P class=MsoNormal style="TEXT-INDENT: 21.25pt"><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">交换技术已经使用了很多年。第一个</SPAN><SPAN 
lang=EN-US style="COLOR: black">Unix</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">系统内核就监控空闲内存的数量。当空闲内存数量小于一个固定的极限值时，就执行换出操作。换出操作包括<SPAN 
class=GramE>把进程</SPAN>的整个地址空间拷贝到磁盘上。反之，当调度算法选择出一个进程运行时，整个进程又被从磁盘中交换进来</SPAN><SPAN 
lang=EN-US style="COLOR: black"><o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-INDENT: 21.25pt"><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">现代的</SPAN><SPAN 
lang=EN-US style="COLOR: black">Unix</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">（包括</SPAN><SPAN 
lang=EN-US style="COLOR: black">Linux</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">）内核已经摒弃了这种方法，主要是因为当进行换入换出时，上下文切换的代价相当高。在</SPAN><SPAN 
lang=EN-US style="COLOR: black">Linux</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">中，交换的单位是页面而不是进程。尽管交换的单位是页面，但交换还是要付出一定的代价，尤其是时间的代价。实际上，在操作系统中，时间和空间是一对矛盾，常常需要在二者之间<SPAN 
class=GramE>作出</SPAN>平衡，有时需要以空间换时间，有时需要以时间换空间，页面交换就是典型的以时间换空间。这里要说明的是，页面交换是不得已而为之，例如在时间要求比较紧急的实时系统中，是不宜采用页面交换机制的，因为它使程序的执行在时间上有了较大的不确定性。因此，</SPAN><SPAN 
lang=EN-US style="COLOR: black">Linux</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">给用户提供了一种选择，可以通过命令或系统调用开启或关闭交换机制。</SPAN><SPAN 
lang=EN-US style="COLOR: black"><o:p></o:p></SPAN></P>
<P class=MsoNormal><SPAN lang=EN-US style="COLOR: black"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">在页面交换中，页面置换算法是影响交换性能的关键性指标，其复杂性主要与换出有关。具体说来，必须考虑四个主要问题：</SPAN><SPAN 
lang=EN-US style="COLOR: black"><o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="MARGIN-LEFT: 21.25pt; TEXT-INDENT: -21.25pt; mso-list: l3 level1 lfo1; tab-stops: list 21.25pt 42.5pt"><![if !supportLists]><SPAN 
lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings; mso-bidi-font-family: 宋体"><SPAN 
style="mso-list: Ignore">・<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN></SPAN><![endif]><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">哪种页面要换出</SPAN><SPAN 
lang=EN-US style="COLOR: black"><o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="MARGIN-LEFT: 21.25pt; TEXT-INDENT: -21.25pt; mso-list: l3 level1 lfo1; tab-stops: list 21.25pt 42.5pt"><![if !supportLists]><SPAN 
lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings; mso-bidi-font-family: 宋体"><SPAN 
style="mso-list: Ignore">・<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN></SPAN><![endif]><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">如何在交换区中存放页面</SPAN><SPAN 
lang=EN-US style="COLOR: black"><o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="MARGIN-LEFT: 21.25pt; TEXT-INDENT: -21.25pt; mso-list: l3 level1 lfo1; tab-stops: list 21.25pt 42.5pt"><![if !supportLists]><SPAN 
lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings; mso-bidi-font-family: 宋体"><SPAN 
style="mso-list: Ignore">・<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN></SPAN><![endif]><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">如何选择被交换出的页面</SPAN><SPAN 
lang=EN-US style="COLOR: black"><o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="MARGIN-LEFT: 21.25pt; TEXT-INDENT: -21.25pt; mso-list: l3 level1 lfo1; tab-stops: list 21.25pt 42.5pt"><![if !supportLists]><SPAN 
lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings; mso-bidi-font-family: 宋体"><SPAN 
style="mso-list: Ignore">・<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN></SPAN><![endif]><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">何时执行页面换出操作</SPAN><SPAN 
lang=EN-US style="COLOR: black"><o:p></o:p></SPAN></P>
<P class=MsoNormal style="tab-stops: list 42.5pt"><SPAN lang=EN-US 
style="COLOR: black"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN></SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">请注意，我们在这里所提到的页或页面指的是其中存放的数据，因此，所谓页面的换入换出实际上是指页面中数据的换入换出。</SPAN><SPAN 
lang=EN-US style="COLOR: black"><o:p></o:p></SPAN></P>
<P class=MsoNormal style="mso-outline-level: 1; tab-stops: list 42.5pt"><SPAN 
lang=EN-US style="COLOR: black">1</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">．哪种页面被换出</SPAN><SPAN 
lang=EN-US style="COLOR: black"><o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-INDENT: 15.6pt"><SPAN lang=EN-US 
style="COLOR: black"><SPAN style="mso-spacerun: yes">&nbsp;</SPAN></SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">实际上，交换的最终目的是页面的回收。并非内存中的所有页面都是可以交换出去的。事实上，只有与用户空间建立了映射关系的物理页面才会被换出去，而内核空间中内核所占的页面则常驻内存。我们下面对用户空间中的页面和内核空间中的页面给出进一步的分类讨论。</SPAN><SPAN 
lang=EN-US style="COLOR: black"><o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN-LEFT: 5.4pt"><SPAN lang=EN-US 
style="COLOR: black"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN></SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">可以把用户空间中的页面按其内容和性质分为以下几种：</SPAN><SPAN 
lang=EN-US style="COLOR: black"><o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="MARGIN-LEFT: 36.6pt; TEXT-INDENT: -25.8pt; mso-list: l0 level1 lfo2; tab-stops: list 36.6pt"><![if !supportLists]><SPAN 
lang=EN-US style="COLOR: black; mso-bidi-font-family: 宋体"><SPAN 
style="mso-list: Ignore">（1）<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; 
</SPAN></SPAN></SPAN><![endif]><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">进程映像所占的页面，包括进程的代码段、数据段、堆栈段以及动态分配的“存储堆”（参见图</SPAN><SPAN 
lang=EN-US style="COLOR: black">6.13</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">）。</SPAN><SPAN 
lang=EN-US style="COLOR: black"><o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="MARGIN-LEFT: 36.6pt; TEXT-INDENT: -25.8pt; mso-list: l0 level1 lfo2; tab-stops: list 36.6pt"><![if !supportLists]><SPAN 
lang=EN-US style="COLOR: black; mso-bidi-font-family: 宋体"><SPAN 
style="mso-list: Ignore">（2）<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; 
</SPAN></SPAN></SPAN><![endif]><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">通过系统调用</SPAN><SPAN 
lang=EN-US style="COLOR: black">mmap()</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">把文件的内容映射到用户空间</SPAN><SPAN 
lang=EN-US style="COLOR: black"><o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="MARGIN-LEFT: 36.6pt; TEXT-INDENT: -25.8pt; mso-list: l0 level1 lfo2; tab-stops: list 36.6pt"><![if !supportLists]><SPAN 
lang=EN-US style="COLOR: black; mso-bidi-font-family: 宋体"><SPAN 
style="mso-list: Ignore">（3）<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; 
</SPAN></SPAN></SPAN><![endif]><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">进程间共享内存区</SPAN><SPAN 
lang=EN-US style="COLOR: black"><o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN-LEFT: 10.8pt"><SPAN lang=EN-US 
style="COLOR: black"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN></SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">对于第</SPAN><SPAN 
lang=EN-US style="COLOR: black">1</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">种情况，进程的代码段数据段所占的内存页面可以被换入换出，但堆栈所占的页面一般不被换出，因为这样可以简化内核的设计。</SPAN><SPAN 
lang=EN-US style="COLOR: black"><o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN-LEFT: 10.8pt"><SPAN lang=EN-US 
style="COLOR: black"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">对于第</SPAN><SPAN 
lang=EN-US style="COLOR: black">2</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">种情况，这些页面所使用的交换区就是被映射的文件本身。</SPAN><SPAN 
lang=EN-US style="COLOR: black"><o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN-LEFT: 10.8pt"><SPAN lang=EN-US 
style="COLOR: black"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">对于第</SPAN><SPAN 
lang=EN-US style="COLOR: black">3</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">种情况，其页面的换入换出比较复杂。</SPAN><SPAN 
lang=EN-US style="COLOR: black"><o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN-LEFT: 10.8pt"><SPAN lang=EN-US 
style="COLOR: black"><o:p>&nbsp;</o:p></SPAN></P>
<P class=MsoNormal style="MARGIN-LEFT: 10.8pt"><SPAN lang=EN-US 
style="COLOR: black"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">与此相对照，映射到内核空间中的页面都不会被换出。具体来说，内核代码和内核中的全局量所占的内存页面既不需要分配（启动时被装入），也不会被释放，这部分空间是静态的。（相比之下，进程的代码段和全局量都在用户空间，所占的内存页面都是动态的，使用前要经过分配，最后都会被释放，中途可能被换出而回收后另行分配）</SPAN><SPAN 
lang=EN-US style="COLOR: black"><o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN-LEFT: 10.8pt"><SPAN lang=EN-US 
style="COLOR: black"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">除此之外，内核在执行过程中使用的页面要经过动态分配，但永驻内存，此类页面根据其内容和性质可以分为两类：</SPAN><SPAN 
lang=EN-US style="COLOR: black"><o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="MARGIN-LEFT: 44.4pt; TEXT-INDENT: -23.4pt; mso-list: l4 level1 lfo3; tab-stops: list 44.4pt"><![if !supportLists]><SPAN 
lang=EN-US style="COLOR: black; mso-bidi-font-family: 宋体"><SPAN 
style="mso-list: Ignore">（1）<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN></SPAN><![endif]><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">内核调用</SPAN><SPAN 
lang=EN-US style="COLOR: black">kmalloc()</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">或</SPAN><SPAN 
lang=EN-US style="COLOR: black">vmalloc()</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">为内核中临时使用的数据结构而分配的<SPAN 
class=GramE>页于是</SPAN>立即释放。但是，由于一个页面中存放有多个同种类型的数据结构，所以要到整个页面都空闲时才把该页面释放。</SPAN><SPAN 
lang=EN-US style="COLOR: black"><o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="MARGIN-LEFT: 44.4pt; TEXT-INDENT: -23.4pt; mso-list: l4 level1 lfo3; tab-stops: list 44.4pt"><![if !supportLists]><SPAN 
lang=EN-US style="COLOR: black; mso-bidi-font-family: 宋体"><SPAN 
style="mso-list: Ignore">（2）<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN></SPAN><![endif]><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">内核中通过调用</SPAN><SPAN 
lang=EN-US style="COLOR: black">alloc_pages()</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">，为某些临时使用和管理目的而分配的页面，例如，每个进程的内核<SPAN 
class=GramE>栈</SPAN>所占的两个页面、从内核空间复制参数时所使用的页面等等。这些页面也是一旦使用完毕便无保存价值，所以立即释放。</SPAN><SPAN 
lang=EN-US style="COLOR: black"><o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-INDENT: 21pt"><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">在内核中还有一种页面，虽然使用完毕，但其内容仍有保存价值，因此，并不立即释放。这类页面“释放”之后进入一个</SPAN><SPAN 
lang=EN-US style="COLOR: black">LRU</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">队列，经过一段时间的缓冲让其“老化”。如果在此期间又要用到其内容了，就又将其投入使用，否则便继续让其老化，直到条件不再允许时才加以回收。这种用途的内核页面大致有以下这些：</SPAN><SPAN 
lang=EN-US style="COLOR: black"><o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="MARGIN-LEFT: 42.25pt; TEXT-INDENT: -21.25pt; mso-list: l2 level1 lfo4; tab-stops: list 21.25pt"><![if !supportLists]><SPAN 
lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings; mso-bidi-font-family: 宋体"><SPAN 
style="mso-list: Ignore">・<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN></SPAN><![endif]><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">文件系统中用来缓冲存储一些文件目录结构</SPAN><SPAN 
lang=EN-US style="COLOR: black">dentry</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">的空间</SPAN><SPAN 
lang=EN-US style="COLOR: black"><o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="MARGIN-LEFT: 42.25pt; TEXT-INDENT: -21.25pt; mso-list: l2 level1 lfo4; tab-stops: list 21.25pt"><![if !supportLists]><SPAN 
lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings; mso-bidi-font-family: 宋体"><SPAN 
style="mso-list: Ignore">・<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN></SPAN><![endif]><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">文件系统中用来缓冲存储一些索引节点</SPAN><SPAN 
lang=EN-US style="COLOR: black">inode</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">的空间</SPAN><SPAN 
lang=EN-US style="COLOR: black"><o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="MARGIN-LEFT: 42.25pt; TEXT-INDENT: -21.25pt; mso-list: l2 level1 lfo4; tab-stops: list 21.25pt"><![if !supportLists]><SPAN 
lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings; mso-bidi-font-family: 宋体"><SPAN 
style="mso-list: Ignore">・<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN></SPAN><![endif]><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">用于文件系统读／写操作的缓冲区</SPAN><SPAN 
lang=EN-US style="COLOR: black"><o:p></o:p></SPAN></P>
<P class=MsoNormal style="mso-outline-level: 1"><SPAN lang=EN-US 
style="COLOR: black">2.</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">如何在交换区中存放页面</SPAN><SPAN 
lang=EN-US style="COLOR: black"><o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-INDENT: 21pt"><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">我们知道物理内存被划分为若干页面，每个页面的大小为</SPAN><SPAN 
lang=EN-US style="COLOR: black">4KB</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">。实际上，交换区也被划分为块，每个块的大小正好等于一页，我们把交换区中的一块叫做一个<B 
style="mso-bidi-font-weight: normal">页插槽</B>（</SPAN><SPAN lang=EN-US 
style="COLOR: black">page slot</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">），意思是说，把一个物理页面插入到一个插槽中。当进行换出时，内核尽可能把换出的页放在相邻的插槽中，从而减少在访问交换区时磁盘的寻道时间。这是高效的页面置换算法的物质基础。</SPAN><SPAN 
lang=EN-US style="COLOR: black"><o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-INDENT: 21.25pt"><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">如果系统使用了多个交换区，事情就变得更加复杂了。快速交换区（也就是存放在快速磁盘中的交换区）可以获得比较高的优先级。当查找一个空闲插槽时，要从优先级最高的交换区中开始搜索。如果优先级最高的交换区不止一个，为了避免超负荷地使用其中一个，应该循环选择相同优先级的交换区。如果在优先级最高的交换区中没有找到空闲插槽，就在优先级次高的交换区中继续进行搜索，依此类推。</SPAN><SPAN 
lang=EN-US style="COLOR: black"><o:p></o:p></SPAN></P>
<P class=MsoNormal style="mso-outline-level: 1; tab-stops: list 42.5pt"><SPAN 
lang=EN-US style="COLOR: black">3</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">．如何选择被交换出的页面</SPAN><SPAN 
lang=EN-US style="COLOR: black"><o:p></o:p></SPAN></P>
<P class=MsoNormal><SPAN lang=EN-US style="COLOR: black"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">页面交换是非常复杂的，其主要内容之一就是如何选择要换出的页面，我们以循序渐进的方式来讨论页面交换策略的选择。</SPAN><SPAN 
lang=EN-US style="COLOR: black"><o:p></o:p></SPAN></P>
<P class=MsoNormal><SPAN lang=EN-US style="COLOR: black"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">策略<SPAN 
class=GramE>一</SPAN>，需要时才交换。每当缺页异常发生时，就给它分配一个物理页面。如果发现没有空闲的页面可供分配，就设法将一个或多个内存页面换出到磁盘上，从而腾出一些内存页面来。这种交换策略确实简单，但有一个明显的缺点，这是一种被动的交换策略，需要时才交换，系统势必要付出相当多的时间进行换入换出。</SPAN><SPAN 
lang=EN-US style="COLOR: black"><o:p></o:p></SPAN></P>
<P class=MsoNormal><SPAN lang=EN-US style="COLOR: black"><SPAN 
style="mso-spacerun: yes">&nbsp; </SPAN></SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">策略二，系统空闲时交换。与策略<SPAN 
class=GramE>一</SPAN>相比较，这是一种积极的交换策略，也就是，在系统空闲时，预先换出一些页面而腾出一些内存页面，从而在内存中维持一定的空闲页面供应量，使得在缺页中断发生时总有空闲页面可供使用。至于换出页面的选择，一般都采用</SPAN><SPAN 
lang=EN-US style="COLOR: black">LRU</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">（最近最少使用）算法。但是这种策略实施起来也有困难，因为并没有哪种方法能准确地预测对页面的访问，所以，完全可能发生这样的情况，即一个好久没有受到访问的页面刚刚被换出去，却又要访问它了，于是又把它换进来。在最坏的情况下，有可能整个系统的处理能力都被这样的换入／换出所影响，而根本不能进行有效的计算和操作。这种现象被称为页面的“抖动”。</SPAN><SPAN 
lang=EN-US style="COLOR: black"><o:p></o:p></SPAN></P>
<P class=MsoNormal><SPAN lang=EN-US style="COLOR: black"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">策略三，换出但并不立即释放。当系统挑选出若干页面进行换出时，将相应的页面写入磁盘交换区中，并修改相应页表中页表项的内容（把</SPAN><SPAN 
lang=EN-US style="COLOR: black">present</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">标志位置为</SPAN><SPAN 
lang=EN-US style="COLOR: black">0</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">），但是并不立即释放，而是将其</SPAN><SPAN 
lang=EN-US style="COLOR: black">page</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">结构留在一个缓冲（</SPAN><SPAN 
lang=EN-US style="COLOR: black">cache</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">）队列中，使其从活跃（</SPAN><SPAN 
lang=EN-US style="COLOR: black">active</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">）状态转为不活跃（</SPAN><SPAN 
lang=EN-US style="COLOR: black">Inactive</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">）状态。至于这些页面的最后释放，要推迟到必要时才进行。这样，如果一个页面在释放后又立即受到访问，就可以从物理页面的缓冲队列中找到相应的页面，再次为之建立映射。由于此页面尚未释放，还保留着原来的内容，就不需要磁盘读入了。经过一段时间以后，一个不活跃的内存页面一直没有受到访问，那这个页面就需要真正被释放了。</SPAN><SPAN 
lang=EN-US style="COLOR: black"><o:p></o:p></SPAN></P>
<P class=MsoNormal><SPAN lang=EN-US style="COLOR: black"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">策略四，把页面换出推迟到不能再推迟为止。实际上，策略<SPAN 
class=GramE>三还有</SPAN>值得改进的地方。首先在换出页面时不一定要把它的内容写入磁盘。如果一个页面自从最近一次换入后并没有被写过（如代码），那么这个页面是“干净的”，就没有必要把它写入磁盘。其次，即使“脏”页面，也没有必要立即写出去，可以采用策略三。至于“干净”页面，可以一直缓冲到必要时才加以回收，因为回收一个“干净”页面花费的代价很小。</SPAN><SPAN 
lang=EN-US style="COLOR: black"><o:p></o:p></SPAN></P>
<P class=MsoNormal><SPAN lang=EN-US style="COLOR: black"><SPAN 
style="mso-spacerun: yes">&nbsp; </SPAN></SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">下面对物理页面的换入换出给出一个概要描述，这里涉及到前面介绍的</SPAN><SPAN 
lang=EN-US style="COLOR: black">page</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">结构和</SPAN><SPAN 
lang=EN-US style="COLOR: black">free_area</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">结构：</SPAN><SPAN 
lang=EN-US style="COLOR: black"><o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="MARGIN-LEFT: 21.25pt; TEXT-INDENT: -21.25pt; mso-list: l1 level1 lfo5; tab-stops: list 21.25pt"><![if !supportLists]><SPAN 
lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings; mso-bidi-font-family: 宋体"><SPAN 
style="mso-list: Ignore">・<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN></SPAN><![endif]><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">释放页面。如果一个页面变为空闲可用，就把该页面的</SPAN><SPAN 
lang=EN-US style="COLOR: black">page</SPAN><SPAN class=GramE><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">结构链入某个</SPAN></SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">页面管理区</SPAN><SPAN 
lang=EN-US style="COLOR: black">(zone)</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">的空闲队列</SPAN><SPAN 
lang=EN-US style="COLOR: black">free_area</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">，同时页面的使用计数</SPAN><SPAN 
lang=EN-US style="COLOR: black">count</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">减</SPAN><SPAN 
lang=EN-US style="COLOR: black">1</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">。</SPAN><SPAN 
lang=EN-US style="COLOR: black"><o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="MARGIN-LEFT: 21.25pt; TEXT-INDENT: -21.25pt; mso-list: l1 level1 lfo5; tab-stops: list 21.25pt"><![if !supportLists]><SPAN 
lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings; mso-bidi-font-family: 宋体"><SPAN 
style="mso-list: Ignore">・<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN></SPAN><![endif]><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">分配页面。调用</SPAN><SPAN 
lang=EN-US style="COLOR: black">__alloc_pages()</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">或</SPAN><SPAN 
lang=EN-US style="COLOR: black">__get_free_page()</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">从某个空闲队列分配内存页面，并将其页面的使用计数</SPAN><SPAN 
lang=EN-US style="COLOR: black">count</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">置为</SPAN><SPAN 
lang=EN-US style="COLOR: black">1</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">。</SPAN><SPAN 
lang=EN-US style="COLOR: black"><o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="MARGIN-LEFT: 21.25pt; TEXT-INDENT: -21.25pt; mso-list: l1 level1 lfo5; tab-stops: list 21.25pt"><![if !supportLists]><SPAN 
lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings; mso-bidi-font-family: 宋体"><SPAN 
style="mso-list: Ignore">・<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN></SPAN><![endif]><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">活跃状态。已分配的页面处于活跃状态，该页面的数据结构</SPAN><SPAN 
lang=EN-US style="COLOR: black">page</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">通过其队列<SPAN 
class=GramE>头结构<SPAN lang=EN-US 
style="FONT-FAMILY: 'Times New Roman'">lru</SPAN>链入活跃</SPAN>页面队列</SPAN><SPAN 
lang=EN-US style="COLOR: black">active_list</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">，并且在进程地址空间中至少有一个页与该页面之间建立了映射关系。</SPAN><SPAN 
lang=EN-US style="COLOR: black"><o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="MARGIN-LEFT: 21.25pt; TEXT-INDENT: -21.25pt; mso-list: l1 level1 lfo5; tab-stops: list 21.25pt"><![if !supportLists]><SPAN 
lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings; mso-bidi-font-family: 宋体"><SPAN 
style="mso-list: Ignore">・<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN></SPAN><![endif]><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">不活跃“脏”状态。处于该状态的页面其</SPAN><SPAN 
lang=EN-US style="COLOR: black">page</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">结构通过其队列<SPAN 
class=GramE>头结构<SPAN lang=EN-US 
style="FONT-FAMILY: 'Times New Roman'">lru</SPAN>链入</SPAN>不活跃“脏”页面队列</SPAN><SPAN 
lang=EN-US style="COLOR: black">inactive_dirty_list</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">，并且原则是任何进程的页面表<SPAN 
class=GramE>项不再</SPAN>指向该页面，也就是说，断开页面的映射，同时把页面的使用计数</SPAN><SPAN lang=EN-US 
style="COLOR: black">count</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">减</SPAN><SPAN 
lang=EN-US style="COLOR: black">1</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">。</SPAN><SPAN 
lang=EN-US style="COLOR: black"><o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="MARGIN-LEFT: 21.25pt; TEXT-INDENT: -21.25pt; mso-list: l1 level1 lfo5; tab-stops: list 21.25pt"><![if !supportLists]><SPAN 
lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings; mso-bidi-font-family: 宋体"><SPAN 
style="mso-list: Ignore">・<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN></SPAN><![endif]><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">将不活跃“脏”页面的内容写入交换区，并将该页面的</SPAN><SPAN 
lang=EN-US style="COLOR: black">page</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">结构从不活跃“脏”页面队列</SPAN><SPAN 
lang=EN-US style="COLOR: black">inactive_dirty_list</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">转移到不活跃“干净”页面队列，准备被回收。</SPAN><SPAN 
lang=EN-US style="COLOR: black"><o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="MARGIN-LEFT: 21.25pt; TEXT-INDENT: -21.25pt; mso-list: l1 level1 lfo5; tab-stops: list 21.25pt"><![if !supportLists]><SPAN 
lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings; mso-bidi-font-family: 宋体"><SPAN 
style="mso-list: Ignore">・<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN></SPAN><![endif]><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">不活跃“干净”状态。页面</SPAN><SPAN 
lang=EN-US style="COLOR: black">page</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">结构通过其队列<SPAN 
class=GramE>头结构<SPAN lang=EN-US 
style="FONT-FAMILY: 'Times New Roman'">lru</SPAN>链入</SPAN>某个不活跃“干净”页面队列，每个页面管理区都有个不活跃“干净”页面队列</SPAN><SPAN 
lang=EN-US style="COLOR: black">inactive_clean_list</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">。</SPAN><SPAN 
lang=EN-US style="COLOR: black"><o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="MARGIN-LEFT: 21.25pt; TEXT-INDENT: -21.25pt; mso-list: l1 level1 lfo5; tab-stops: list 21.25pt"><![if !supportLists]><SPAN 
lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings; mso-bidi-font-family: 宋体"><SPAN 
style="mso-list: Ignore">・<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN></SPAN><![endif]><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">如果在转入不活跃状态以后的一段时间内，页面又受到访问，则又转入活跃状态并恢复映射。</SPAN><SPAN 
lang=EN-US style="COLOR: black"><o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="MARGIN-LEFT: 21.25pt; TEXT-INDENT: -21.25pt; mso-list: l1 level1 lfo5; tab-stops: list 21.25pt"><![if !supportLists]><SPAN 
lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: Wingdings; mso-bidi-font-family: 宋体"><SPAN 
style="mso-list: Ignore">・<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN></SPAN><![endif]><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">当需要时，就从“干净”页面队列中回收页面，也就是说或者把页面链入到空闲队列，或者直接进行分配。</SPAN><SPAN 
lang=EN-US style="COLOR: black"><o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN-LEFT: 21.25pt"><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">以上是页面换入／换出及回收的基本思想，实际的实现代码还要更复杂一些。</SPAN><SPAN 
lang=EN-US style="COLOR: black"><o:p></o:p></SPAN></P>
<P class=MsoNormal style="mso-outline-level: 1"><SPAN lang=EN-US 
style="COLOR: black">4</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">．何时执行页面换出操作</SPAN><SPAN 
lang=EN-US style="COLOR: black"><o:p></o:p></SPAN></P>
<P class=MsoNormal><SPAN lang=EN-US style="COLOR: black"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">为了避免在</SPAN><SPAN 
lang=EN-US style="COLOR: black">CPU</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">忙碌的时候，也就是在缺页异常发生时，临时搜索可供换出的内存页面并加以换出，</SPAN><SPAN 
lang=EN-US style="COLOR: black">Linux</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">内核定期地检查系统内的空闲页面数是否小于预定义的极限，一旦发现空闲页面数太少，就预先将若干页面换出，以减轻缺页异常发生时系统所承受的负担。当然，由于无法确切地预测页面的使用，即使这样做了也还可能出现缺页异常发生时内存依然没有足够的空闲页面。但是，预换出毕竟能减少空闲页面不够用的概率。并且通过选择适当的参数（如每隔多久换出一次，每次换出多少页），可以使临时寻找要换出页面的情况很少发生。为此，</SPAN><SPAN 
lang=EN-US style="COLOR: black">Linux</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">内核设置了一个专伺定期将页面换出的守护进程</SPAN><SPAN 
lang=EN-US style="COLOR: black">kswapd</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">。</SPAN><SPAN 
lang=EN-US style="COLOR: black"><o:p></o:p></SPAN></P>
<P class=MsoNormal><SPAN 
lang=EN-US><o:p>&nbsp;</o:p></SPAN></P></DIV></BODY></HTML>
