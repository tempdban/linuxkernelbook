<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0067)http://www.kerneltravel.net/kernel-book/第四章%20进程描述/4.8.3.htm -->
<HTML xmlns="http://www.w3.org/TR/REC-html40" xmlns:o = 
"urn:schemas-microsoft-com:office:office" xmlns:w = 
"urn:schemas-microsoft-com:office:word" xmlns:st1 = 
"urn:schemas-microsoft-com:office:smarttags"><HEAD><TITLE>自旋锁、读写自旋锁和大读者自旋锁</TITLE>
<META http-equiv=Content-Type content="text/html; charset=gb2312">
<META content=Word.Document name=ProgId>
<META content="MSHTML 6.00.3790.4324" name=GENERATOR>
<META content="Microsoft Word 11" name=Originator><LINK 
href="4.8.3.files/filelist.xml" rel=File-List><o:SmartTagType downloadurl="" 
name="chsdate" 
namespaceuri="urn:schemas-microsoft-com:office:smarttags"></o:SmartTagType><!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>CLJ</o:Author>
  <o:Template>Normal</o:Template>
  <o:LastAuthor>CLJ</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>0</o:TotalTime>
  <o:Created>2007-08-15T03:09:00Z</o:Created>
  <o:LastSaved>2007-08-15T03:09:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>90</o:Words>
  <o:Characters>516</o:Characters>
  <o:Lines>4</o:Lines>
  <o:Paragraphs>1</o:Paragraphs>
  <o:CharactersWithSpaces>605</o:CharactersWithSpaces>
  <o:Version>11.5606</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:GrammarState>Clean</w:GrammarState>
  <w:PunctuationKerning/>
  <w:DrawingGridVerticalSpacing>7.8 磅</w:DrawingGridVerticalSpacing>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>2</w:DisplayVerticalDrawingGridEvery>
  <w:ValidateAgainstSchemas/>
  <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>
  <w:IgnoreMixedContent>false</w:IgnoreMixedContent>
  <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>
  <w:Compatibility>
   <w:SpaceForUL/>
   <w:BalanceSingleByteDoubleByteWidth/>
   <w:DoNotLeaveBackslashAlone/>
   <w:ULTrailSpace/>
   <w:DoNotExpandShiftReturn/>
   <w:AdjustLineHeightInTable/>
   <w:BreakWrappedTables/>
   <w:SnapToGridInCell/>
   <w:WrapTextWithPunct/>
   <w:UseAsianBreakRules/>
   <w:DontGrowAutofit/>
   <w:UseFELayout/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:LatentStyles DefLockedState="false" LatentStyleCount="156">
 </w:LatentStyles>
</xml><![endif]--><!--[if !mso]>
<OBJECT id=ieooui classid=clsid:38481807-CA0E-42D2-BF39-B33AF135CC4D></OBJECT>
<STYLE>st1\:* {
	BEHAVIOR: url(#ieooui)
}
</STYLE>
<![endif]-->
<STYLE>@font-face {
	font-family: 宋体;
}
@font-face {
	font-family: @宋体;
}
@page  {mso-page-border-surround-header: no; mso-page-border-surround-footer: no; }
@page Section1 {size: 595.3pt 841.9pt; margin: 72.0pt 90.0pt 72.0pt 90.0pt; mso-header-margin: 42.55pt; mso-footer-margin: 49.6pt; mso-paper-source: 0; layout-grid: 15.6pt; }
P.MsoNormal {
	TEXT-JUSTIFY: inter-ideograph; FONT-SIZE: 10.5pt; MARGIN: 0cm 0cm 0pt; COLOR: black; FONT-FAMILY: "Times New Roman"; TEXT-ALIGN: justify; mso-style-parent: ""; mso-pagination: none; mso-fareast-font-family: 宋体; mso-font-kerning: 1.0pt
}
LI.MsoNormal {
	TEXT-JUSTIFY: inter-ideograph; FONT-SIZE: 10.5pt; MARGIN: 0cm 0cm 0pt; COLOR: black; FONT-FAMILY: "Times New Roman"; TEXT-ALIGN: justify; mso-style-parent: ""; mso-pagination: none; mso-fareast-font-family: 宋体; mso-font-kerning: 1.0pt
}
DIV.MsoNormal {
	TEXT-JUSTIFY: inter-ideograph; FONT-SIZE: 10.5pt; MARGIN: 0cm 0cm 0pt; COLOR: black; FONT-FAMILY: "Times New Roman"; TEXT-ALIGN: justify; mso-style-parent: ""; mso-pagination: none; mso-fareast-font-family: 宋体; mso-font-kerning: 1.0pt
}
P.MsoPlainText {
	TEXT-JUSTIFY: inter-ideograph; FONT-SIZE: 10.5pt; MARGIN: 0cm 0cm 0pt; COLOR: black; FONT-FAMILY: 宋体; TEXT-ALIGN: justify; mso-pagination: none; mso-font-kerning: 1.0pt; mso-bidi-font-size: 10.0pt; mso-hansi-font-family: "Courier New"; mso-bidi-font-family: "Times New Roman"
}
LI.MsoPlainText {
	TEXT-JUSTIFY: inter-ideograph; FONT-SIZE: 10.5pt; MARGIN: 0cm 0cm 0pt; COLOR: black; FONT-FAMILY: 宋体; TEXT-ALIGN: justify; mso-pagination: none; mso-font-kerning: 1.0pt; mso-bidi-font-size: 10.0pt; mso-hansi-font-family: "Courier New"; mso-bidi-font-family: "Times New Roman"
}
DIV.MsoPlainText {
	TEXT-JUSTIFY: inter-ideograph; FONT-SIZE: 10.5pt; MARGIN: 0cm 0cm 0pt; COLOR: black; FONT-FAMILY: 宋体; TEXT-ALIGN: justify; mso-pagination: none; mso-font-kerning: 1.0pt; mso-bidi-font-size: 10.0pt; mso-hansi-font-family: "Courier New"; mso-bidi-font-family: "Times New Roman"
}
SPAN.GramE {
	mso-style-name: ""; mso-gram-e: yes
}
DIV.Section1 {
	page: Section1
}
</STYLE>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:普通表格;
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:"";
	mso-padding-alt:0cm 5.4pt 0cm 5.4pt;
	mso-para-margin:0cm;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";
	mso-ansi-language:#0400;
	mso-fareast-language:#0400;
	mso-bidi-language:#0400;}
</style>
<![endif]--></HEAD>
<BODY lang=ZH-CN style="TEXT-JUSTIFY-TRIM: punctuation; tab-interval: 21.0pt">
<DIV class=Section1 style="LAYOUT-GRID:  15.6pt none">
<P class=MsoPlainText><st1:chsdate w:st="on" IsROCDate="False" 
IsLunarDate="False" Day="30" Month="12" Year="1899"><SPAN lang=EN-US 
style="mso-font-kerning: 0pt">4.8.3</SPAN></st1:chsdate><SPAN lang=EN-US 
style="mso-font-kerning: 0pt"> </SPAN><SPAN 
style="mso-font-kerning: 0pt">自旋锁、读写自旋锁和大读者自旋锁<SPAN 
lang=EN-US><o:p></o:p></SPAN></SPAN></P>
<P class=MsoPlainText><SPAN lang=EN-US style="mso-font-kerning: 0pt"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="mso-font-kerning: 0pt">在<SPAN 
lang=EN-US>Linux</SPAN>开发的早期，开发者就面临这样的问题，即不同类型的上下文（用户进程对中断）如何访问共享的数据，以及如何访问来自多个<SPAN 
lang=EN-US>CPU</SPAN>同一上下文的不同实例。<SPAN lang=EN-US><o:p></o:p></SPAN></SPAN></P>
<P class=MsoPlainText><SPAN lang=EN-US style="mso-font-kerning: 0pt"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="mso-font-kerning: 0pt">在<SPAN lang=EN-US>Linux</SPAN>内核中，临界区的代码或者是<SPAN 
class=GramE>由进程</SPAN>上下文来执行，或者是由中断上下文来执行。在单<SPAN 
lang=EN-US>CPU</SPAN>上，可以用<SPAN lang=EN-US>cli/sti</SPAN>指令来保护临界区的使用，例如：<SPAN 
lang=EN-US><o:p></o:p></SPAN></SPAN></P>
<P class=MsoPlainText><SPAN lang=EN-US 
style="mso-font-kerning: 0pt"><o:p>&nbsp;</o:p></SPAN></P>
<P class=MsoPlainText style="TEXT-INDENT: 36pt"><SPAN class=GramE><SPAN 
lang=EN-US style="mso-font-kerning: 0pt">unsigned</SPAN></SPAN><SPAN lang=EN-US 
style="mso-font-kerning: 0pt"> long flags;<o:p></o:p></SPAN></P>
<P class=MsoPlainText><SPAN lang=EN-US 
style="mso-font-kerning: 0pt"><o:p>&nbsp;</o:p></SPAN></P>
<P class=MsoPlainText style="TEXT-INDENT: 36pt"><SPAN lang=EN-US 
style="mso-font-kerning: 0pt">save_<SPAN 
class=GramE>flags(</SPAN>flags);<o:p></o:p></SPAN></P>
<P class=MsoPlainText style="TEXT-INDENT: 36pt"><SPAN lang=PT-BR 
style="mso-font-kerning: 0pt; mso-ansi-language: PT-BR">cli();<o:p></o:p></SPAN></P>
<P class=MsoPlainText style="TEXT-INDENT: 36pt"><SPAN lang=PT-BR 
style="mso-font-kerning: 0pt; mso-ansi-language: PT-BR">/* critical code 
*/<o:p></o:p></SPAN></P>
<P class=MsoPlainText style="TEXT-INDENT: 36pt"><SPAN lang=PT-BR 
style="mso-font-kerning: 0pt; mso-ansi-language: PT-BR">restore_flags(flags);<o:p></o:p></SPAN></P>
<P class=MsoPlainText style="TEXT-INDENT: 36pt"><SPAN lang=PT-BR 
style="mso-font-kerning: 0pt; mso-ansi-language: PT-BR"><o:p>&nbsp;</o:p></SPAN></P>
<P class=MsoPlainText><SPAN lang=PT-BR 
style="mso-font-kerning: 0pt; mso-ansi-language: PT-BR"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="mso-font-kerning: 0pt">但是，在<SPAN 
lang=EN-US>SMP</SPAN>上，这种方法明显是没有用的，因为同一段代码序列可能由另一个进程同时执行<SPAN 
lang=EN-US>,</SPAN>而<SPAN lang=EN-US>cli()</SPAN>仅仅能单独地为每个<SPAN 
lang=EN-US>CPU</SPAN>上的中断上下文提供对<SPAN class=GramE>竟争</SPAN>资源的保护，它无法对运行在不同<SPAN 
lang=EN-US>CPU</SPAN>上的上下文提供对<SPAN class=GramE>竟争</SPAN>资源的访问。因此，必须用到自旋锁。<SPAN 
lang=EN-US><o:p></o:p></SPAN></SPAN></P>
<P class=MsoPlainText><SPAN lang=EN-US style="mso-font-kerning: 0pt"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="mso-font-kerning: 0pt">所谓自旋锁，就是当一个进程发现锁被另一个进程锁着时，它就不停地“旋转”，不断执行一个指令的循环直到锁打开。<SPAN 
class=GramE>自旋锁只对</SPAN><SPAN lang=EN-US>SMP</SPAN>有用，对单<SPAN 
lang=EN-US>CPU</SPAN>没有意义。<SPAN lang=EN-US><o:p></o:p></SPAN></SPAN></P>
<P class=MsoPlainText><SPAN lang=EN-US style="mso-font-kerning: 0pt"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="mso-font-kerning: 0pt">有三种类型的自旋锁：基本的、读写以及大读者自旋锁。读写自旋锁适用于“多个读者少数写者”的场合，例如，有多个读者仅有一个写者，或者没有读者只有一个写者。大读者自旋锁是读写自旋锁的一种，但更照顾读者。大读者自旋<SPAN 
class=GramE>锁现在</SPAN>主要用在<SPAN lang=EN-US>Sparc64</SPAN>和网络系统中。<SPAN 
lang=EN-US><o:p></o:p></SPAN></SPAN></P>
<P class=MsoPlainText><SPAN lang=EN-US style="mso-font-kerning: 0pt"><SPAN 
style="mso-spacerun: yes">&nbsp;</SPAN><SPAN 
style="mso-spacerun: yes">&nbsp;</SPAN><o:p></o:p></SPAN></P>
<P class=MsoNormal><SPAN 
lang=EN-US><o:p>&nbsp;</o:p></SPAN></P></DIV></BODY></HTML>
