<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0078)http://www.kerneltravel.net/kernel-book/第二章%20Linux运行的硬件基础/2.3.7.htm -->
<HTML xmlns="http://www.w3.org/TR/REC-html40" xmlns:o = 
"urn:schemas-microsoft-com:office:office" xmlns:w = 
"urn:schemas-microsoft-com:office:word" xmlns:st1 = 
"urn:schemas-microsoft-com:office:smarttags"><HEAD><TITLE>Linux中的段</TITLE>
<META http-equiv=Content-Type content="text/html; charset=gb2312">
<META content=Word.Document name=ProgId>
<META content="MSHTML 6.00.3790.4324" name=GENERATOR>
<META content="Microsoft Word 11" name=Originator><LINK 
href="2.3.7.files/filelist.xml" rel=File-List><o:SmartTagType downloadurl="" 
name="chsdate" 
namespaceuri="urn:schemas-microsoft-com:office:smarttags"></o:SmartTagType><o:SmartTagType 
downloadurl="" name="chmetcnv" 
namespaceuri="urn:schemas-microsoft-com:office:smarttags"></o:SmartTagType><!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>CLJ</o:Author>
  <o:Template>Normal</o:Template>
  <o:LastAuthor>CLJ</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>1</o:TotalTime>
  <o:Created>2007-08-14T07:13:00Z</o:Created>
  <o:LastSaved>2007-08-14T07:13:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>436</o:Words>
  <o:Characters>2489</o:Characters>
  <o:Lines>20</o:Lines>
  <o:Paragraphs>5</o:Paragraphs>
  <o:CharactersWithSpaces>2920</o:CharactersWithSpaces>
  <o:Version>11.5606</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:GrammarState>Clean</w:GrammarState>
  <w:PunctuationKerning/>
  <w:DrawingGridVerticalSpacing>7.8 磅</w:DrawingGridVerticalSpacing>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>2</w:DisplayVerticalDrawingGridEvery>
  <w:ValidateAgainstSchemas/>
  <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>
  <w:IgnoreMixedContent>false</w:IgnoreMixedContent>
  <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>
  <w:Compatibility>
   <w:SpaceForUL/>
   <w:BalanceSingleByteDoubleByteWidth/>
   <w:DoNotLeaveBackslashAlone/>
   <w:ULTrailSpace/>
   <w:DoNotExpandShiftReturn/>
   <w:AdjustLineHeightInTable/>
   <w:BreakWrappedTables/>
   <w:SnapToGridInCell/>
   <w:WrapTextWithPunct/>
   <w:UseAsianBreakRules/>
   <w:DontGrowAutofit/>
   <w:UseFELayout/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:LatentStyles DefLockedState="false" LatentStyleCount="156">
 </w:LatentStyles>
</xml><![endif]--><!--[if !mso]>
<OBJECT id=ieooui classid=clsid:38481807-CA0E-42D2-BF39-B33AF135CC4D></OBJECT>
<STYLE>st1\:* {
	BEHAVIOR: url(#ieooui)
}
</STYLE>
<![endif]-->
<STYLE>@font-face {
	font-family: Wingdings;
}
@font-face {
	font-family: 宋体;
}
@font-face {
	font-family: @宋体;
}
@page  {mso-page-border-surround-header: no; mso-page-border-surround-footer: no; }
@page Section1 {size: 595.3pt 841.9pt; margin: 72.0pt 90.0pt 72.0pt 90.0pt; mso-header-margin: 42.55pt; mso-footer-margin: 49.6pt; mso-paper-source: 0; layout-grid: 15.6pt; }
P.MsoNormal {
	TEXT-JUSTIFY: inter-ideograph; FONT-SIZE: 10.5pt; MARGIN: 0cm 0cm 0pt; FONT-FAMILY: "Times New Roman"; TEXT-ALIGN: justify; mso-style-parent: ""; mso-pagination: none; mso-bidi-font-size: 10.0pt; mso-fareast-font-family: 宋体; mso-font-kerning: 5.0pt
}
LI.MsoNormal {
	TEXT-JUSTIFY: inter-ideograph; FONT-SIZE: 10.5pt; MARGIN: 0cm 0cm 0pt; FONT-FAMILY: "Times New Roman"; TEXT-ALIGN: justify; mso-style-parent: ""; mso-pagination: none; mso-bidi-font-size: 10.0pt; mso-fareast-font-family: 宋体; mso-font-kerning: 5.0pt
}
DIV.MsoNormal {
	TEXT-JUSTIFY: inter-ideograph; FONT-SIZE: 10.5pt; MARGIN: 0cm 0cm 0pt; FONT-FAMILY: "Times New Roman"; TEXT-ALIGN: justify; mso-style-parent: ""; mso-pagination: none; mso-bidi-font-size: 10.0pt; mso-fareast-font-family: 宋体; mso-font-kerning: 5.0pt
}
SPAN.GramE {
	mso-style-name: ""; mso-gram-e: yes
}
DIV.Section1 {
	page: Section1
}
OL {
	MARGIN-BOTTOM: 0cm
}
UL {
	MARGIN-BOTTOM: 0cm
}
</STYLE>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:普通表格;
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:"";
	mso-padding-alt:0cm 5.4pt 0cm 5.4pt;
	mso-para-margin:0cm;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";
	mso-ansi-language:#0400;
	mso-fareast-language:#0400;
	mso-bidi-language:#0400;}
</style>
<![endif]--></HEAD>
<BODY lang=ZH-CN style="TEXT-JUSTIFY-TRIM: punctuation; tab-interval: 21.0pt">
<DIV class=Section1 style="LAYOUT-GRID:  15.6pt none">
<P class=MsoNormal style="mso-layout-grid-align: none"><st1:chsdate w:st="on" 
IsROCDate="False" IsLunarDate="False" Day="30" Month="12" Year="1899"><B 
style="mso-bidi-font-weight: normal"><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">2.3.7</SPAN></B></st1:chsdate><B 
style="mso-bidi-font-weight: normal"><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"> 
Linux</SPAN></B><B style="mso-bidi-font-weight: normal"><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">中的段<SPAN 
lang=EN-US><o:p></o:p></SPAN></SPAN></B></P>
<P class=MsoNormal 
style="TEXT-INDENT: 22.8pt; mso-layout-grid-align: none"><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">Intel</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">微处理器的<SPAN 
class=GramE>段机制</SPAN>是从<SPAN lang=EN-US>8086</SPAN>开始提出的，那时引入的<SPAN 
class=GramE>段机制</SPAN>解决了从<SPAN lang=EN-US>CPU</SPAN>内部<SPAN 
lang=EN-US>16</SPAN>位地址到<SPAN lang=EN-US>20</SPAN>位实地址的转换。为了保持这种兼容性，<SPAN 
lang=EN-US>386</SPAN>仍然使用段机制，但比以前复杂得多。因此，<SPAN 
lang=EN-US>Linux</SPAN>内核的设计并没有全部采用<SPAN 
lang=EN-US>Intel</SPAN>所提供的段方案，仅仅有限度地使用了一下分段机制。这不仅简化了<SPAN 
lang=EN-US>Linux</SPAN>内核的设计，而且为把<SPAN 
lang=EN-US>Linux</SPAN>移植到其他平台创造了条件，因为很多<SPAN 
lang=EN-US>RISC</SPAN>处理器并不支持段机制。但是，对<SPAN class=GramE>段机制</SPAN>相关知识的了解是进入<SPAN 
lang=EN-US>Linux</SPAN>内核的必经之路。<SPAN lang=EN-US><o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 22.8pt; mso-layout-grid-align: none"><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">从<SPAN 
lang=EN-US>2.2</SPAN>版开始，<SPAN 
lang=EN-US>Linux</SPAN>让所有的进程（或叫任务）都使用相同的逻辑地址空间，因此就没有必要使用局部描述符表<SPAN 
lang=EN-US>LDT</SPAN>。但内核中也用到<SPAN lang=EN-US>LDT</SPAN>，那只是在<SPAN 
lang=EN-US>VM86</SPAN>模式中运行<SPAN lang=EN-US>Wine</SPAN>，因为就是说在<SPAN 
lang=EN-US>Linux</SPAN>上模拟运行<SPAN lang=EN-US>Winodws</SPAN>软件或<SPAN 
lang=EN-US>DOS</SPAN>软件的程序时才使用。<SPAN lang=EN-US><o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 22.8pt; mso-layout-grid-align: none"><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">Linux</SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">在启动的过程中设置了段寄存器的值和全局描述符表<SPAN 
lang=EN-US>GDT</SPAN>的内容，段的定义在<SPAN 
lang=EN-US>include/asm-i386/segment.h</SPAN>中：<SPAN 
lang=EN-US><o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 22.8pt; mso-layout-grid-align: none"><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">#define 
__KERNEL_CS<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>0x10<SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">／＊内核代码段，<SPAN 
lang=EN-US>index=2,TI=0,RPL=0</SPAN>＊／<SPAN 
lang=EN-US><o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 22.8pt; mso-layout-grid-align: none"><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">#define 
__KERNEL_DS<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>0x18<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">／＊内核数据段<SPAN 
lang=EN-US>, index=3,TI=0,RPL=0</SPAN>＊／<SPAN 
lang=EN-US><o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal style="mso-layout-grid-align: none"><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN><SPAN 
style="mso-spacerun: yes">&nbsp;</SPAN>#define __USER_CS<SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>0x23<SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">／＊用户代码段<SPAN 
lang=EN-US>, index=4,TI=0,RPL=3</SPAN>＊／<SPAN 
lang=EN-US><o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 22.8pt; mso-layout-grid-align: none"><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">#define 
__USER_DS<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>0x2B<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">／＊用户数据段<SPAN 
lang=EN-US>, index=5,TI=0,RPL=3</SPAN>＊／<SPAN 
lang=EN-US><o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 22.8pt; mso-layout-grid-align: none"><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">从定义看出，没有定义堆栈段，实际上，<SPAN 
lang=EN-US>Linux</SPAN>内核不区分数据段和堆栈段，这也体现了<SPAN 
lang=EN-US>Linux</SPAN>内核尽量减少段的使用。因为没有使用<SPAN lang=EN-US>LDT</SPAN>，因此，<SPAN 
lang=EN-US>TI=0,</SPAN>并把这<SPAN lang=EN-US>4</SPAN>个段都放在<SPAN 
lang=EN-US>GDT</SPAN>中<SPAN lang=EN-US>, index</SPAN>就是某个段在<SPAN 
lang=EN-US>GDT</SPAN>表中的下标。内核代码段和数据段具有最高特权，因此其<SPAN lang=EN-US>RPL</SPAN>为<SPAN 
lang=EN-US>0</SPAN>，而用户代码段和数据段具有最低特权，因此其<SPAN lang=EN-US>RPL</SPAN>为<SPAN 
lang=EN-US>3</SPAN>。可以看出，<SPAN lang=EN-US>Linux</SPAN>内核再次简化了<SPAN 
class=GramE>特权级</SPAN>的使用，使用了两个<SPAN class=GramE>特权级</SPAN>而不是<SPAN 
lang=EN-US>4</SPAN>个。<SPAN lang=EN-US><o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 22.8pt; mso-layout-grid-align: none"><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><o:p>&nbsp;</o:p></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 22.8pt; mso-layout-grid-align: none"><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">全局描述符表的定义在<SPAN 
lang=EN-US>arch/i386/kernel/head.S</SPAN>中：<SPAN 
lang=EN-US><o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 22.8pt; mso-layout-grid-align: none"><SPAN class=GramE><SPAN 
lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">ENTRY(</SPAN></SPAN><SPAN 
lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">gdt_table)<o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 22.8pt; mso-layout-grid-align: none"><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>.quad 0x0000000000000000<SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>/* 
NULL descriptor */<o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 22.8pt; mso-layout-grid-align: none"><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>.quad 0x0000000000000000<SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>/* 
not used */<o:p></o:p></SPAN></P>
<P class=MsoNormal style="mso-layout-grid-align: none"><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN>.quad 
0x00cf<st1:chmetcnv w:st="on" TCSC="0" NumberType="1" Negative="False" 
HasSpace="False" SourceValue="9" UnitName="a">9a</st1:chmetcnv>000000ffff<SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>/* 
0x10 kernel 4GB code at 0x00000000 */<o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 22.8pt; mso-layout-grid-align: none"><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>.quad 0x00cf92000000ffff<SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>/* 
0x18 kernel 4GB data at 0x00000000 */<o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 22.8pt; mso-layout-grid-align: none"><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>.quad 0x00cffa000000ffff<SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>/* 
0x23 user<SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>4GB code at 
0x00000000 */<o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 22.8pt; mso-layout-grid-align: none"><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>.quad 0x00cff2000000ffff<SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>/* 
0x2b user<SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>4GB data at 
0x00000000 */<o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 22.8pt; mso-layout-grid-align: none"><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>.quad 0x0000000000000000<SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>/* 
not used */<o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 22.8pt; mso-layout-grid-align: none"><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp; </SPAN><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN>.quad 
0x0000000000000000<SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>/* 
not used */<o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 22.8pt; mso-layout-grid-align: none"><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>/*<o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 22.8pt; mso-layout-grid-align: none"><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>* The APM segments have byte granularity and their 
bases<o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 22.8pt; mso-layout-grid-align: none"><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>* <SPAN class=GramE>and</SPAN> limits are set at run 
time.<o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 22.8pt; mso-layout-grid-align: none"><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>*/<o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 22.8pt; mso-layout-grid-align: none"><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>.quad 0x0040920000000000<SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>/* 
0x40 APM set up for bad BIOS's */<o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 22.8pt; mso-layout-grid-align: none"><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN lang=PT-BR 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'; mso-ansi-language: PT-BR">.quad 
0x<st1:chmetcnv w:st="on" TCSC="0" NumberType="1" Negative="False" 
HasSpace="False" SourceValue="409" 
UnitName="a">00409a</st1:chmetcnv>0000000000<SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>/* 
0x48 APM CS<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>code 
*/<o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 22.8pt; mso-layout-grid-align: none"><SPAN lang=PT-BR 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'; mso-ansi-language: PT-BR"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">.quad 
0x<st1:chmetcnv w:st="on" TCSC="0" NumberType="1" Negative="False" 
HasSpace="False" SourceValue="9" 
UnitName="a">00009a</st1:chmetcnv>0000000000<SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>/* 
0x50 APM CS 16 code (16 bit) */<o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 22.8pt; mso-layout-grid-align: none"><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>.quad 0x0040920000000000<SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>/* 
0x58 APM DS<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>data 
*/<o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 22.8pt; mso-layout-grid-align: none"><SPAN lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'"><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>.fill NR_CPUS*4<SPAN class=GramE>,8,0</SPAN><SPAN 
style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>/* space for TSS's and LDT's */<o:p></o:p></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 22.8pt; mso-layout-grid-align: none"><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">从代码可以看出，<SPAN 
lang=EN-US>GDT</SPAN>放在数组变量<SPAN lang=EN-US>gdt_table</SPAN>中。按<SPAN 
lang=EN-US>Intel</SPAN>规定，<SPAN 
lang=EN-US>GDT</SPAN>中的第一项为空，这是为了防止加电后段寄存器未经初始化就进入保护模式而使用<SPAN 
lang=EN-US>GDT</SPAN>的。第二项也没用。从下标<SPAN lang=EN-US>2</SPAN>到<SPAN 
lang=EN-US>5</SPAN>共<SPAN lang=EN-US>4</SPAN>项对应于前面的<SPAN 
lang=EN-US>4</SPAN>种段描述符值。对照图<SPAN lang=EN-US>2.10</SPAN>，从描述符的数值可以得出：<SPAN 
lang=EN-US><o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal 
style="MARGIN-LEFT: 21.25pt; TEXT-INDENT: -21.25pt; mso-layout-grid-align: none; mso-list: l0 level1 lfo1; tab-stops: list 21.25pt"><![if !supportLists]><SPAN 
lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: Wingdings; mso-bidi-font-family: 宋体"><SPAN 
style="mso-list: Ignore">・<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN></SPAN><![endif]><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">段的基地址全部为<SPAN 
lang=EN-US>0x00000000<o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal 
style="MARGIN-LEFT: 21.25pt; TEXT-INDENT: -21.25pt; mso-layout-grid-align: none; mso-list: l0 level1 lfo1; tab-stops: list 21.25pt"><![if !supportLists]><SPAN 
lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: Wingdings; mso-bidi-font-family: 宋体"><SPAN 
style="mso-list: Ignore">・<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN></SPAN><![endif]><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">段的上限全部为<SPAN 
lang=EN-US>0xffff<o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal 
style="MARGIN-LEFT: 21.25pt; TEXT-INDENT: -21.25pt; mso-layout-grid-align: none; mso-list: l0 level1 lfo1; tab-stops: list 21.25pt"><![if !supportLists]><SPAN 
lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: Wingdings; mso-bidi-font-family: 宋体"><SPAN 
style="mso-list: Ignore">・<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN></SPAN><![endif]><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">段的粒度<SPAN 
lang=EN-US>G</SPAN>为<SPAN lang=EN-US>1</SPAN>，即段长单位为<SPAN 
lang=EN-US>4KB<o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal 
style="MARGIN-LEFT: 21.25pt; TEXT-INDENT: -21.25pt; mso-layout-grid-align: none; mso-list: l0 level1 lfo1; tab-stops: list 21.25pt"><![if !supportLists]><SPAN 
lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: Wingdings; mso-bidi-font-family: 宋体"><SPAN 
style="mso-list: Ignore">・<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN></SPAN><![endif]><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">段的<SPAN 
lang=EN-US>D</SPAN>位为<SPAN lang=EN-US>1</SPAN>，即对这四个段的访问都为<SPAN 
lang=EN-US>32</SPAN>位指令<SPAN lang=EN-US><o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal 
style="MARGIN-LEFT: 21.25pt; TEXT-INDENT: -21.25pt; mso-layout-grid-align: none; mso-list: l0 level1 lfo1; tab-stops: list 21.25pt"><![if !supportLists]><SPAN 
lang=EN-US 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: Wingdings; mso-bidi-font-family: 宋体"><SPAN 
style="mso-list: Ignore">・<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN></SPAN><![endif]><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">段的<SPAN 
lang=EN-US>P</SPAN>位为<SPAN lang=EN-US>1</SPAN>，即四个段都在内存。<SPAN 
lang=EN-US><o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 22.8pt; mso-layout-grid-align: none"><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">由此可以得出，每个段的逻辑地址空间范围为<SPAN 
lang=EN-US>0</SPAN>～<SPAN lang=EN-US>4GB</SPAN>。读者可能对此不太理解，但只要对照图<SPAN 
lang=EN-US>2.9</SPAN>就可以发现，这种设置既简单又巧妙。因为每个段的基地址为<SPAN 
lang=EN-US>0</SPAN>，因此，逻辑地址到线性地址映射保持不变，也就是说，偏移量就是线性地址，我们以后所提到的逻辑地址（或虚拟地址）和线性地址指的也就是同一地址。看来，<SPAN 
lang=EN-US>Linux</SPAN>巧妙地<SPAN class=GramE>把段机制给绕</SPAN>过去了，而完全利用了分页机制。<SPAN 
lang=EN-US><o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 22.8pt; mso-layout-grid-align: none"><SPAN 
style="COLOR: black; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-hansi-font-family: 'Times New Roman'">从逻辑上说，<SPAN 
lang=EN-US>Linux</SPAN>巧妙地绕过了逻辑地址到线性地址的映射，但实质上还得应付<SPAN 
lang=EN-US>Intel</SPAN>所提供的段机制。只不过，<SPAN lang=EN-US>Linux</SPAN><SPAN 
class=GramE>把段机制</SPAN>变得相当简单，它<SPAN class=GramE>只把段分为</SPAN>两种：用户态（<SPAN 
lang=EN-US>RPL</SPAN>＝<SPAN lang=EN-US>3</SPAN>）的段和内核态（<SPAN 
lang=EN-US>RPL=0</SPAN>）的段，因此，描述符投影寄存器的内容很少发生变化，只在进程从用户态切换到内核<SPAN 
class=GramE>态或者</SPAN>反之时才发生变化。另外，用户段和内核段的区别也仅仅在其<SPAN 
lang=EN-US>RPL</SPAN>不同，因此内核根本无需访问描述符投影寄存器，当然也无需访问<SPAN 
lang=EN-US>GDT</SPAN>，而仅从段寄存器的最低两位就可以获取<SPAN lang=EN-US>RPL</SPAN>的信息。<SPAN 
lang=EN-US>Linux</SPAN>这样设计所带来的好处是显而易见的，<SPAN lang=EN-US>Intel</SPAN>的分段部件对<SPAN 
lang=EN-US>Linux</SPAN>性能造成的影响可以忽略不计。<SPAN 
lang=EN-US><o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 22.8pt; mso-layout-grid-align: none"><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">在上面描述的</SPAN><SPAN 
lang=EN-US>GDT</SPAN><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">表中，紧接着那四个段描述的两个描述符被保留，然后是四个高级电源管理（</SPAN><SPAN 
lang=EN-US>APM</SPAN><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">）特征描述符，对此不进行详细讨论。</SPAN></P>
<P class=MsoNormal 
style="TEXT-INDENT: 22.8pt; mso-layout-grid-align: none"><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">按</SPAN><SPAN 
lang=EN-US>Intel</SPAN><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">的规定，每个进程有一个任务状态段（</SPAN><SPAN 
lang=EN-US>TSS</SPAN><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">）和局部描述符表</SPAN><SPAN 
lang=EN-US>LDT</SPAN><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">，但</SPAN><SPAN 
lang=EN-US>Linux</SPAN><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">也没有完全遵循</SPAN><SPAN 
lang=EN-US>Intel</SPAN><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">的设计思路。如前所述，</SPAN><SPAN 
lang=EN-US>Linux</SPAN><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">的进程没有使用</SPAN><SPAN 
lang=EN-US>LDT</SPAN><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">，而对</SPAN><SPAN 
lang=EN-US>TSS</SPAN><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">的使用也非常有限，每个</SPAN><SPAN 
lang=EN-US>CPU</SPAN><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">仅使用一个</SPAN><SPAN 
lang=EN-US>TSS</SPAN><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">。</SPAN></P>
<P class=MsoNormal><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">通过上面的介绍可以看出，</SPAN><SPAN 
lang=EN-US>Intel</SPAN><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">的设计可谓周全细致，但</SPAN><SPAN 
lang=EN-US>Linux</SPAN><SPAN 
style="FONT-FAMILY: 宋体; mso-hansi-font-family: 'Times New Roman'; mso-ascii-font-family: 'Times New Roman'">的设计者并没有完全陷入这种沼泽，而是选择了简洁而有效的途径，以完成所需功能并达到较好的性能为目</SPAN></P></DIV></BODY></HTML>
